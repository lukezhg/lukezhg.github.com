<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Chunlei's Blog]]></title>
  <link href="http://zhangchunlei.com/atom.xml" rel="self"/>
  <link href="http://zhangchunlei.com/"/>
  <updated>2018-01-07T20:10:36+08:00</updated>
  <id>http://zhangchunlei.com/</id>
  <author>
    <name><![CDATA[chunlei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[人生算法]]></title>
    <link href="http://zhangchunlei.com/blog/2018/01/05/life-algorithm/"/>
    <updated>2018-01-05T14:41:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2018/01/05/life-algorithm</id>
    <content type="html"><![CDATA[<p>生命是一种形式的传承。一旦无法传承，就意味着生命的终结。而决定其命运的就是其核心算法。</p>

<p>生物如此，人也是如此。作为种族如此，作为个体也是如此。</p>

<p>1、做正确的事。<br/>
有人把成功的秘诀归结为一句话：做正确的事。找工作也好，找女朋友也好，创业也罢，要想成功就要能够在正确的时间、正确的地点、做正确的事。</p>

<p>现实是我们经常做错事儿，更糟糕的是做错了事还不自知。它就像一个牢笼，让你与成功失之交臂。</p>

<p>如何改变这种状态呢？这就需要改良你的人生算法。</p>

<p>2、人生算法<br/>
如果生命的本质是形式的传承，那么决定传承规律的就是生命的核心算法，它相当于你的DNA。实际上犯错并不可怕，世上没有人不犯错，关键是犯错能改。</p>

<p>因此能改和不能改才是关键。人的生命活动就是不断与外界环境交互的过程中迭代。有些算法会让你不断自我升级，有些算法则会让你沉入死循环。</p>

<p>那么，什么东西决定你自我迭代中能改还是不能改呢？答案是有目的行动。</p>

<p>3、有目的的行动<br/>
你可能会说，我做任何事情都是有目的的。事实可能的确如此，你追剧是为了娱乐和打发时间，你游泳是为了锻炼身体，你熬夜是为了赶工作，你查看朋友圈是为了增进友谊，但是你发现没有你做的诸多事情的目的是各不相同的，它们各自为政，甚至相互矛盾。在如今事情总是赶不完的情况下，如果你不会计划和选择，那么你将杂事缠身、迷失自我，更是达不到你自己的人生目标。因此，有目的的行动，统领自己的行为，并监控自己执行是一个非常关键而有挑战性任务。因为，你可能会随时被打扰、被中断、被牵绊、被拐骗，因此最重要不是管理时间，而是管理你自己，不是认识世界，而是认识你自己。</p>

<p>人人都以为这些都是自己能做主的，只要自己有决心就一定能行。但实际上，并不是如此简单。比如减肥就是一个最好的例子，有多少人能真正减肥成功的呢？但是不是我们就无所作为了呢，也不是，问题在于我们要找到自己的核心算法，找到算法的bug，然后再加以修正和完善，就好比基因治疗。</p>

<p>4、人生算法的套路<br/>
核心算法包含：目标选择、任务计划、执行策略、检验反馈。<br/>
APAF（Aim Plan Action Feedback）</p>

<p>目标：认识自我，找到真正想要的，才能做出正确的目标选择，活出自己的人生。</p>

<p>计划：设计可行的任务路径和计划，才能逼近目标直到目标达成。任务的可行性和灵活性是关键。</p>

<p>行动：在执行任务的时候，需要采用合理的策略应对自身和环境的变化。比如合适的自我监控机制和环境变化应对策略等。</p>

<p>反馈：明确目标达成的检验方法和反馈机制才能激励自己实现目标。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress update]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/31/octopress-update/"/>
    <updated>2017-12-31T23:46:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/31/octopress-update</id>
    <content type="html"><![CDATA[<p>升级导致的问题。</p>

<p>octopress用了很长时间了，最进粘贴代码时遇到了一些问题，以为升级可以解决，但是升级却带了新的麻烦。</p>

<p>找到的一篇貌似实用的讨论：https://stackoverflow.com/questions/5286117/incompatible-character-encodings-ascii-8bit-and-utf-8</p>

<p>但是试过了对我无效。</p>

<p>回顾一下问题出现的原因，首先出现错误代码是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Liquid Exception: Unknown tag 'static' in</span></code></pre></td></tr></table></div></figure>


<p>原因是我潜入了html代码，rake以为我要render这些代码，结果误认为有一些非法tag，所以提示上面的错误。</p>

<p>解决的方式是： 利用 raw 和 endraw标记。如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'>    <span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;&gt;</span>
</span><span class='line'>    <span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;title&gt;</span>{% block title %}{% endblock %}<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>        <span class="nt">&lt;h1&gt;</span>My helpful timestamp site<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>        {% block content %}{% endblock %}
</span><span class='line'>        {% block footer %}
</span><span class='line'>        <span class="nt">&lt;hr&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p&gt;</span>Thanks for visiting my site.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>        {% endblock %}
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/html&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>如果没有这个标记，系统就会渲染这些代码的效果，结果就是有未知tag错误。</p>

<p>我以为可以通过升级gem或者rake来解决这个问题，于是升级gem，升级时提示rake版本不够高。这时octopress还能正常工作。于是又安装了rvm和rake结果悲剧了。提示错误：</p>

<pre><code>Liquid error: incompatible character encodings: UTF-8 and ASCII-8BIT
</code></pre>

<p>这个错误很严重，直接rake generate吹产生错误的页面。</p>

<p>网上查的各种方法都没用，最后看自己的博客，发现一招删除rake：</p>

<pre><code>sudo gem uninstall rake  
</code></pre>

<p>之后选择要删除的版本，我直接是删除所有高级版本，原因是我的octopress是5年前的，肯定和高级版本不合拍。于是试了一下，问题解决了！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django cheat sheet]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/31/django-cheat-sheet/"/>
    <updated>2017-12-31T09:50:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/31/django-cheat-sheet</id>
    <content type="html"><![CDATA[<p>1、通过创建一个新的 virtualenv 为部署 Django 应用程序设置环境：</p>

<pre><code>mkvirtualenv DjangoApp
</code></pre>

<p>要退出新的 virtualenv，请使用 deactivate。您可以使用 workon 在环境之间切换。要加载或在 virtualenv 之间切换，请使用 workon 命令：</p>

<pre><code>workon DjangoApp
</code></pre>

<p>在您的当前环境中安装 Django</p>

<pre><code>pip install Django
</code></pre>

<p>2、使用 django-admin 命令创建项目</p>

<pre><code>django-admin startproject demoproject
</code></pre>

<p>3、进入demo project文件夹，使用python manage.py startapp 创建应用.</p>

<pre><code>cd demoproject
python manage.py startapp demoapp
</code></pre>

<p>4、测试项目服务器，Ctrl+C退出服务器。</p>

<pre><code>python manage.py runserver
</code></pre>

<p>或者指定服务器ip和端口。</p>

<pre><code>python manage.py runserver 0.0.0.0:8000
</code></pre>

<p>5、创建超级用户用于登陆django admin后台管理平台。</p>

<pre><code>python manage.py createsuperuser admin
</code></pre>

<p>6、编辑设置文件和项目相关文件。  <br/>
settings.py 控制项目参数。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>INSTALLED_APPS = [
</span><span class='line'>    'django.contrib.admin',
</span><span class='line'>    'django.contrib.auth',
</span><span class='line'>    'django.contrib.contenttypes',
</span><span class='line'>    'django.contrib.sessions',
</span><span class='line'>    'django.contrib.messages',
</span><span class='line'>    'django.contrib.staticfiles',
</span><span class='line'>    'clips',
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>DATABASES = {
</span><span class='line'>    'default': {
</span><span class='line'>        'ENGINE': 'django.db.backends.mysql',#mysql.connector.django
</span><span class='line'>        'USER': 'root',
</span><span class='line'>        'PASSWORD': '123456',
</span><span class='line'>        'NAME': 'demoproject',
</span><span class='line'>        'HOST': '127.0.0.1',
</span><span class='line'>        'PORT': '3306',
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>urls.py 控制访问请求路径</p>

<pre><code>from django.conf.urls import url
from django.contrib import admin
from demoproject.views import hello
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^hello/$', hello),
]
</code></pre>

<p>views.py 控制访问请求的应答</p>

<pre><code>from django.http import HttpResponse
def hello(request):
    return HttpResponse("Hello world")
</code></pre>

<p>demoapp/models.py 控制数据结构（表格、变量、变量属性）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from __future__ import unicode_literals
</span><span class='line'>from django.db import models
</span><span class='line'>
</span><span class='line'>class User(models.Model):
</span><span class='line'>    user_name = models.CharField(max_length=30)
</span><span class='line'>    password = models.CharField(max_length=40)
</span><span class='line'>    email = models.EmailField()
</span><span class='line'>    headshot = models.ImageField(upload_to='headshot',null=True,blank=True)
</span><span class='line'>    brief = models.CharField(max_length=100)
</span><span class='line'>    join_date = models.DateField()
</span><span class='line'>    user_star = models.CharField(max_length=30)
</span><span class='line'>    def __unicode__(self):
</span><span class='line'>        return self.user_name
</span><span class='line'>......</span></code></pre></td></tr></table></div></figure>


<p>demoapp/admin.py 控制后台注册和数据呈现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from __future__ import unicode_literals
</span><span class='line'>from django.contrib import admin
</span><span class='line'>from .models import User, Clip, Link
</span><span class='line'>import sys;  
</span><span class='line'>reload(sys);  
</span><span class='line'>sys.setdefaultencoding("utf8")
</span><span class='line'>
</span><span class='line'>class UserAdmin(admin.ModelAdmin):
</span><span class='line'>    list_display = ('user_name', 'password', 'email')
</span><span class='line'>    search_fields = ('user_name', 'email')
</span><span class='line'>......
</span><span class='line'>admin.site.register(User,UserAdmin)
</span><span class='line'>......</span></code></pre></td></tr></table></div></figure>


<p>7、当你修改models.py时，需要通过makemigrations将修改反应到数据库中去。</p>

<pre><code>python manage.py makemigrations
python manage.py migrate
</code></pre>

<p>8、利用template来呈现页面。</p>

<p>首先要修改settings.py</p>

<pre><code>TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            # ...
</code></pre>

<p>接下来建文件夹templates</p>

<pre><code>\demoproject
    \demoproject
    \demoapp
    \templates
    manage.py
</code></pre>

<p>修改demoproject\views.py</p>

<pre><code>from django.shortcuts import render
import datetime
def current_datetime(request):
    now = datetime.datetime.now()
    return render(request, 'current_datetime.html', {'current_date': now})
</code></pre>

<p>在templates文件夹，新建html模版文件current_datetime.html。</p>

<p>\mysite_project\mysite\templates\current_datetime.html</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;html&gt;
</span><span class='line'>    &lt;body&gt;
</span><span class='line'>        It is now {{ current_date }}
</span><span class='line'>    &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span><span class='line'>It is now {{ current_date }}.
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<p>模版的继承，比如我们建一个地层模版，然后在这个模版的基础上加载子模版，这样就可以避免重复。<br/>
参考：https://djangobook.com/templates-in-views/</p>

<p>base.html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>{% block title %}{% endblock %}<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>My helpful timestamp site<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    {% block content %}{% endblock %}
</span><span class='line'>    {% block footer %}
</span><span class='line'>    <span class="nt">&lt;hr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;p&gt;</span>Thanks for visiting my site.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>    {% endblock %}
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>current_datetime.html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'>{% extends &quot;base.html&quot; %}
</span><span class='line'>{% block title %}The current time{% endblock %}
</span><span class='line'>{% block content %}
</span><span class='line'>    <span class="nt">&lt;p&gt;</span>It is now {{ current_date }}.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>{% endblock %}
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>hours_ahead.html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'>{% extends &quot;base.html&quot; %}
</span><span class='line'>{% block title %}Future time{% endblock %}
</span><span class='line'>{% block content %}
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>    In {{ hour_offset }} hour(s), it will be {{ next_time }}.
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>{% endblock %}
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>9、利用form来获取用户数据。</p>

<p>mysite_project\mysite\books\templates\books\search_form.html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>Search<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/search/&quot;</span> <span class="na">method=</span><span class="s">&quot;get&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;q&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;Search&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>mysite\books\urls.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">url</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">books</span> <span class="kn">import</span> <span class="n">views</span>
</span><span class='line'><span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^search-form/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">search_form</span><span class="p">),</span>
</span><span class='line'>    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^search/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">search</span><span class="p">),</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>mysite\urls.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class='line'><span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'><span class="c"># ...</span>
</span><span class='line'>    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;books.urls&#39;</span><span class="p">)),</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>books\views.py</p>

<pre><code>from django.shortcuts import render
def search_form(request):
    return render(request, 'books/search_form.html')
def search(request):
    if 'q' in request.GET:
        message = 'You searched for: %r' % request.GET['q']
    else:
        message = 'You submitted an empty form.'
    return HttpResponse(message)
</code></pre>

<p>参考：https://djangobook.com/django-forms/</p>

<p>定义表单类，更简洁的获取用户数据的方法。</p>

<p>mysite_project\mysite\mysite\forms.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django</span> <span class="kn">import</span> <span class="n">forms</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ContactForm</span><span class="p">(</span><span class="n">forms</span><span class="o">.</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>    <span class="n">subject</span> <span class="o">=</span> <span class="n">forms</span><span class="o">.</span><span class="n">CharField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">forms</span><span class="o">.</span><span class="n">EmailField</span><span class="p">(</span><span class="n">required</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="n">forms</span><span class="o">.</span><span class="n">CharField</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>mysite_project\mysite\mysite\views.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">Http404</span><span class="p">,</span> <span class="n">HttpResponse</span><span class="p">,</span> <span class="n">HttpResponseRedirect</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">mysite.forms</span> <span class="kn">import</span> <span class="n">ContactForm</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.core.mail</span> <span class="kn">import</span> <span class="n">send_mail</span><span class="p">,</span> <span class="n">get_connection</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">contact</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">form</span> <span class="o">=</span> <span class="n">ContactForm</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">POST</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">form</span><span class="o">.</span><span class="n">is_valid</span><span class="p">():</span>
</span><span class='line'>            <span class="n">cd</span> <span class="o">=</span> <span class="n">form</span><span class="o">.</span><span class="n">cleaned_data</span>
</span><span class='line'>            <span class="n">con</span> <span class="o">=</span> <span class="n">get_connection</span><span class="p">(</span><span class="s">&#39;django.core.mail.backends.console.EmailBackend&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="n">send_mail</span><span class="p">(</span>
</span><span class='line'>                <span class="n">cd</span><span class="p">[</span><span class="s">&#39;subject&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">cd</span><span class="p">[</span><span class="s">&#39;message&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">cd</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;email&#39;</span><span class="p">,</span> <span class="s">&#39;noreply@example.com&#39;</span><span class="p">),</span>
</span><span class='line'>                <span class="p">[</span><span class="s">&#39;siteowner@example.com&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">connection</span><span class="o">=</span><span class="n">con</span>
</span><span class='line'>            <span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HttpResponseRedirect</span><span class="p">(</span><span class="s">&#39;/contact/thanks/&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">form</span> <span class="o">=</span> <span class="n">ContactForm</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;contact_form.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;form&#39;</span><span class="p">:</span> <span class="n">form</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>mysite_project\mysite\templates\contact_form.html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>Contact us<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">ul</span><span class="nc">.errorlist</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">margin</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">padding</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nc">.errorlist</span> <span class="nt">li</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">background-color</span><span class="o">:</span> <span class="nb">red</span><span class="p">;</span>
</span><span class='line'>            <span class="k">color</span><span class="o">:</span> <span class="nb">white</span><span class="p">;</span>
</span><span class='line'>            <span class="k">display</span><span class="o">:</span> <span class="k">block</span><span class="p">;</span>
</span><span class='line'>            <span class="k">font-size</span><span class="o">:</span> <span class="m">1.2em</span><span class="p">;</span>
</span><span class='line'>            <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">3px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">padding</span><span class="o">:</span> <span class="m">4px</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/style&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Contact us<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    {% if form.errors %}
</span><span class='line'>        <span class="nt">&lt;p</span> <span class="na">style=</span><span class="s">&quot;color: red;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            Please correct the error{{ form.errors|pluralize }} below.
</span><span class='line'>        <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>    {% endif %}
</span><span class='line'>    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">novalidate</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;table&gt;</span>
</span><span class='line'>            {{ form.as_table }}
</span><span class='line'>        <span class="nt">&lt;/table&gt;</span>
</span><span class='line'>        {% csrf_token %}
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;Submit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>10、urls进阶</p>

<p>\urls.py</p>

<pre><code>from django.conf.urls import include, url
from . import views
urlpatterns = [
    url(r'^hello/$', views.hello),
    url(r'^time/$', views.current_datetime),
          url(r'^time/plus/(d{1,2})/$', views.hours_ahead),
]
</code></pre>

<p>\urls.py</p>

<pre><code>from django.conf import settings
from django.conf.urls import url
from . import views
urlpatterns = [
    url(r'^$', views.homepage),
    url(r'^(\d{4})/([a-z]{3})/$', views.archive_month),
]
if settings.DEBUG:
    urlpatterns += [url(r'^debuginfo/$', views.debug),]
</code></pre>

<p>\urls.py</p>

<pre><code>from django.conf.urls import url
from . import views
urlpatterns = [
    url(r'^reviews/2003/$', views.special_case_2003),
    url(r'^reviews/([0-9]{4})/$', views.year_archive),
    url(r'^reviews/([0-9]{4})/([0-9]{2})/$', views.month_archive),
    url(r'^reviews/([0-9]{4})/([0-9]{2})/([0-9]+)/$', views.review_detail),
]
</code></pre>

<p>更多参考： https://djangobook.com/advanced-views-urlconfs/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql charset admin django]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/30/mysql-charset-admin-django/"/>
    <updated>2017-12-30T22:37:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/30/mysql-charset-admin-django</id>
    <content type="html"><![CDATA[<p>中文乱码永远是程序猿的痛！！</p>

<p>今天使用django-admin就遇到了乱码问题，是仿照<a href="https://djangobook.com/adding-models-to-django-admin/">django book</a>的model用法，做一个资源管理平台出现的问题。</p>

<p>代码提示：mysql不能正确处理中文字符，于是一路google找到几个可能的解决措施：</p>

<p>1、修改admin.py</p>

<pre><code>import sys;   
reload(sys);  
sys.setdefaultencoding("utf8") 
</code></pre>

<p>这个办法曾经帮助我解决了chatbot项目的乱码问题。</p>

<p>2、修改mysql的配置文件/etc/my.cnf<br/>
方案一：</p>

<pre><code>[mysqld]
character-set-server=utf8 
[client]
default-character-set=utf8 
[mysql]
default-character-set=utf8
</code></pre>

<p>方案二：utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。所以现在一些新的业务，比如ISO等，会将MySQL数据库的字符集设置为utf8mb4。</p>

<pre><code>[client]  
default-character-set=utf8mb4  

[mysqld]  
character-set-server = utf8mb4  
collation-server = utf8mb4_unicode_ci  
init_connect='SET NAMES utf8mb4'  
skip-character-set-client-handshake = true  

[mysql]  
default-character-set = utf8mb4  
</code></pre>

<p>3、关键还是要会使用命令诊断问题所在。<br/>
我的问题出在新建的数据库中表单变量的字符码设置不是utf8，后来把数据库drop掉，重新配置my.cnf文件，然后重建mysql数据库就没问题了。</p>

<p>4、常用的mysql命令和django命令。</p>

<pre><code>mysql -u db_user -p
SHOW DATABASES;
CREATE DATABASE blog_data;
drop database mydb;
SHOW DATABASES;
</code></pre>

<p>CTRL + D退出mysql。</p>

<p>通过show variables 命令查看字符编码，发现部分变量的编码果然不是utf8，难怪乱码。</p>

<pre><code>show variables like '%char%’;
</code></pre>

<p>尝试重制响应的字符编码设置。</p>

<pre><code>set character_set_server=utf8;
set character_set_database=utf8;
show variables like '%char%’;
</code></pre>

<p>结果无效，于是进一步查看响应的数据库及其表单：</p>

<pre><code>use my_db;
show tables;
show full columns from table1; ／／这条命令可以看到table1中的变量情况，发现果然编码有问题。 
</code></pre>

<p>尝试修改这个表单中的变量设置,也就是my_db.table1表单中的my_var变量字符编码。</p>

<pre><code>ALTER TABLE my_db.table1 MODIFY COLUMN my_var VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;
</code></pre>

<p>错误代码位置发生了改变，这说明改动有效，于是重新建立数据库（见3）。</p>

<p>5、Django的一些命令。</p>

<pre><code>python manage.py createsuperuser #生成admin登陆的超级用户和密码
python manage.py makemigrations #当更改model时，通过此命令把变动反应到数据库中
python manage.py migrate
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swf send data to Java Script]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script/"/>
    <updated>2017-12-29T19:21:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script</id>
    <content type="html"><![CDATA[<p>Flash制作动画非常便捷，但是如何能够把用swf文件收集的数据发送給JS处理呢？下面是一个简单的例子：<br/>
1、首先在html网页中通过object嵌入swf文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>    &lt;body&gt;
</span><span class='line'>    &lt;object type="application/x-shockwave-flash" data="{% static "flash/test.swf" %}"  name="test" width="550" height="400"&gt;
</span><span class='line'>    &lt;param name="allowScriptAccess" value="sameDomain" /&gt; 
</span><span class='line'>    &lt;param name="movie" value="{% static "flash/test.swf" %}" /&gt;
</span><span class='line'>    &lt;/object&gt;
</span><span class='line'>    &lt;/body&gt;
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<p>2、在网页的头部嵌入要调用的函数hello</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script&gt;
</span><span class='line'>    function hello(v){ 
</span><span class='line'>        alert("hello: "+v);
</span><span class='line'>        document.location.href = '/search';
</span><span class='line'>    } 
</span><span class='line'>    function thisMovie(movieName) { 
</span><span class='line'>        if (navigator.appName.indexOf("Microsoft") != -1) { 
</span><span class='line'>            return window[movieName] 
</span><span class='line'>        } 
</span><span class='line'>        else { 
</span><span class='line'>            return document[movieName] 
</span><span class='line'>        } 
</span><span class='line'>    }
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p>3、编辑fla文件，建立一个文本框txt1和一个提交submit按钮</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package {
</span><span class='line'>import flash.net.*;
</span><span class='line'>import flash.events.Event;
</span><span class='line'>import flash.events.MouseEvent;
</span><span class='line'>import flash.display.MovieClip;
</span><span class='line'>import flash.external.ExternalInterface; 
</span><span class='line'>public class test extends MovieClip {
</span><span class='line'>    public function test(): void {
</span><span class='line'>        submit.addEventListener(MouseEvent.CLICK, postForm);
</span><span class='line'>    }
</span><span class='line'>    private function postForm(evt: MouseEvent): void {
</span><span class='line'>        ExternalInterface.call("hello", txt1.text); 
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>4、实现的效果如下：<br/>
当你点击submit按钮时，swf文件会将txt1.text传递給hello函数，并且通过JS现实对话框“欢迎： 某某” 并且跳转到／search页面。</p>

<p>5、原理解释<br/>
fla文件中，导入了flash.external.ExternalInterface类，它是专门负责外部通信的。通过ExternalInterface.call方法，就可以调用object容器外部的函数hello。</p>

<p>6、JS调用AS函数的实现方法。<br/>
上面实现了AS调用JS并传递参数，那么反过来，JS是否可以调用AS函数呢？答案是肯定的。</p>

<p>AS类这样写：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package {
</span><span class='line'>    import flash.net.*;
</span><span class='line'>    import flash.events.Event;
</span><span class='line'>    import flash.events.MouseEvent;
</span><span class='line'>    import flash.display.MovieClip;
</span><span class='line'>    import flash.external.ExternalInterface;
</span><span class='line'>    
</span><span class='line'>    public class test extends MovieClip {
</span><span class='line'>        public function test(): void {
</span><span class='line'>            submit.addEventListener(MouseEvent.CLICK, postForm);
</span><span class='line'>            ExternalInterface.addCallback("say", say); //regist 
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        private function say(txt: String) {
</span><span class='line'>            txt2.text = txt;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        private function postForm(evt: MouseEvent): void {
</span><span class='line'>            //call js function
</span><span class='line'>            ExternalInterface.call("hello", txt1.text);
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Html这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'>    <span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;&gt;</span>
</span><span class='line'>    <span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;title&gt;</span>As communicate with JS<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>        <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>        <span class="nt">&lt;script&gt;</span>
</span><span class='line'>            <span class="kd">function</span> <span class="nx">hello</span><span class="p">(</span><span class="nx">v</span><span class="p">){</span>
</span><span class='line'>                <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;hello: &quot;</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span>
</span><span class='line'>                <span class="c1">//document.location.href = &#39;/search&#39;;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="kd">function</span> <span class="nx">thisMovie</span><span class="p">(</span><span class="nx">movieName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">appName</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Microsoft&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="nb">window</span><span class="p">[</span><span class="nx">movieName</span><span class="p">]</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="nb">document</span><span class="p">[</span><span class="nx">movieName</span><span class="p">]</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#btn1&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#test1&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;Hello world!&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#btn2&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#test2&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#btn3&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                    <span class="c1">//$(&quot;#test3&quot;).val(&quot;Dolly Duck&quot;);</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">txt</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#test3&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
</span><span class='line'>                    <span class="nx">thisMovie</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">).</span><span class="nx">say</span><span class="p">(</span><span class="nx">txt</span><span class="p">);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>        <span class="nt">&lt;object</span> <span class="na">type=</span><span class="s">&quot;application/x-shockwave-flash&quot;</span> <span class="na">data=</span><span class="s">&quot;{% static &quot;</span><span class="na">flash</span><span class="err">/</span><span class="na">test</span><span class="err">.</span><span class="na">swf</span><span class="err">&quot;</span> <span class="err">%}&quot;</span>  <span class="na">name=</span><span class="s">&quot;test&quot;</span> <span class="na">width=</span><span class="s">&quot;550&quot;</span> <span class="na">height=</span><span class="s">&quot;400&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;allowScriptAccess&quot;</span> <span class="na">value=</span><span class="s">&quot;sameDomain&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;movie&quot;</span> <span class="na">value=</span><span class="s">&quot;{% static &quot;</span><span class="na">flash</span><span class="err">/</span><span class="na">test</span><span class="err">.</span><span class="na">swf</span><span class="err">&quot;</span> <span class="err">%}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;embed</span> <span class="na">src=</span><span class="s">&quot;{% static &quot;</span><span class="na">flash</span><span class="err">/</span><span class="na">test</span><span class="err">.</span><span class="na">swf</span><span class="err">&quot;</span> <span class="err">%}&quot;</span> <span class="na">name=</span><span class="s">&quot;test&quot;</span> <span class="na">quality=</span><span class="s">&quot;high&quot;</span> <span class="na">allowScriptAccess=</span><span class="s">&quot;always&quot;</span> <span class="na">swLiveConnect=</span><span class="s">&quot;true&quot;</span> <span class="na">type=</span><span class="s">&quot;application/x-shockwave-flash&quot;</span> <span class="na">width=</span><span class="s">&quot;550&quot;</span> <span class="na">height=</span><span class="s">&quot;400&quot;</span><span class="nt">&gt;&lt;/embed&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/object&gt;</span>
</span><span class='line'>        <span class="nt">&lt;br&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;test1&quot;</span><span class="nt">&gt;</span>This is a paragraph.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;test2&quot;</span><span class="nt">&gt;</span>This is another paragraph.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p&gt;</span>Input field: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;test3&quot;</span> <span class="na">value=</span><span class="s">&quot;Mickey Mouse&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>        <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">&quot;btn1&quot;</span><span class="nt">&gt;</span>Set Text<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>        <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">&quot;btn2&quot;</span><span class="nt">&gt;</span>Set HTML<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>        <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">&quot;btn3&quot;</span><span class="nt">&gt;</span>Set Value<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/html&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>7、遗留的问题：这样的写法谷歌浏览器没问题，但是火狐浏览器不成功，也就是不能把参数传到swf上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《寻梦环游记》的故事元素]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/18/the-writing-tips-of-the-story-coco/"/>
    <updated>2017-12-18T10:34:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/18/the-writing-tips-of-the-story-coco</id>
    <content type="html"><![CDATA[<p>皮克斯制作的动画比如《玩具总动员》，《汽车总动员》，《头脑特工队》都深受观众喜爱。这次又出了新作《寻梦环游记》不仅获得了很高的票房，而且也得到了观众和影评人的一致好评。皮克斯成功的秘诀是什么呢？公司老总给出的答案是：故事、故事还是故事。</p>

<p>郝广才曾经在得到直播专分享过英雄故事的写作元素。</p>

<pre><code>郝广才说，最动人的故事一定是和英雄有关的。
掌握了英雄故事的结构，就能写好一个动人的故事。
英雄故事的结构就像一个钟表盘上的12个刻度，
分别是得到召唤，请求智者支援，启程迎接挑战，开始面对困难的试炼，然后面临恐惧，遭遇危机，接着得到宝物，解决问题，荣归故里，重获新生，获得领悟，最后舍弃功与名回到现实。
</code></pre>

<p>让我们看一看，《寻梦环游记》这部动画的故事情节是否能跟这12个刻度有一定的呼应。</p>

<p>发生：男孩喜欢音乐，梦想向歌王一样歌唱和演奏，但是他却生活在一个极度讨厌音乐的鞋匠世家。他听到镇上有一个才艺秀表演打算参加。【得到召唤】</p>

<p>活动和阻碍：男孩想听、想唱、想演奏，但是都被家人阻挠。他偷偷制造的吉他，结果被意外发现，也被祖母摔个稀巴烂。【面对阻挠】</p>

<p>发展：他一气之下逃离了家庭，准备追寻自己的梦想。为了参加比赛，他需要一把吉他，但是他借不到吉他。一个想法钻进他的脑子里，他想把歌王的吉他借出来演奏。【得到灵感】【启程迎接挑战】</p>

<p>转折：在祭奠歌王的宫殿，他拿到了吉他，但是却因为被诅咒而变成了亡灵。他来到了死人的世界。他遇到了自己家族中先去的亲人，并且见到了他的曾祖母。曾祖母可以通过一个祝福让他回到真实世界，但是却限制他玩音乐。【面对阻挠和危机】</p>

<p>转折：他回到现实世界，结果拿上吉他想去参加比赛，结果违背了条件，又回到了亡灵世界。他终于认识到自己真正的梦想是音乐，为了实现这个梦想，他必须找到并得到曾祖父的祝福，于是就和一个偶然遇到的亡魂开始寻找歌王之旅。曾祖母则开始追踪和保护小男孩。【获得领悟】</p>

<p>转折：找到了歌王之后，他发现歌王实际上并不是他的曾祖父，而是害死自己曾祖父的人。路上偶遇的亡灵才是自己的曾祖父。他的曾祖父实际上是被歌王用毒酒害死的。曾祖父也并没有为了音乐而抛弃家庭，而是深爱着可可，也就是小孩祖母的妈妈。【遭遇危机】</p>

<p>转折：他意识到了家庭的重要性，并愿意向曾祖父那样以家庭为重，甚至放弃音乐。【获得领悟】</p>

<p>转折：经过一番搏斗，歌王被打败了，作品剽窃和杀人的丑事也被知道了。可是曾祖父因为可可马上就忘记他了，而就要消失了。曾祖母給了小男孩祝福，并且没有附加任何条件。【面临危机】</p>

<p>结尾：小男孩会到现实世界，他用吉他演奏了曾祖父的歌曲，可可恢复了记忆，讲述了以往的故事，转变了家人对音乐的看法。一家人又再次相互理解和包容起来，最后在小男孩的歌声和舞蹈里，故事结尾。【回归现实】【重获新生】【获得领悟】</p>

<p>虽然这部动画片不算是典型的战争英雄故事，比如《勇敢的心》，但是小主人公在现实世界和亡灵界追寻梦想、挑战自我、战胜困难、发现自我、获得领悟的历程所展现的，就是他成为自己生活英雄的过程。而这样的生活英雄跟容易与孩子和成人产生共鸣！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AJAX and Chatbot]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/15/ajax-and-chatbot/"/>
    <updated>2017-12-15T20:14:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/15/ajax-and-chatbot</id>
    <content type="html"><![CDATA[<p>AJAX是一个缩写，代表：Asynchronous JavaScript And XML.</p>

<pre><code>AJAX is a developer's dream, because you can:
# Read data from a web server - after the page has loaded
# Update a web page without reloading the page
# Send data to a web server - in the background
</code></pre>

<p>今天改写了一个代码实现了聊天的过程中不需要重新加载页面。代码如下：</p>

<p>urls.py</p>

<pre><code>url(r'^api/chat/', post), 
</code></pre>

<p>view.py</p>

<pre><code>def post(request, *args, **kwargs):
    """
    Return a response to the statement in the posted data.
    """
    bot = ChatBot("Training Example")
    bot.set_trainer(ListTrainer)
    input_data = json.loads(request.read().decode('utf-8'))
    response = bot.get_response(input_data)
    response_data = response.serialize()
    return JsonResponse(response_data, status=200)
</code></pre>

<p>chat.html</p>

<pre><code>&lt;script&gt;
  var chatterbotUrl = '/api/chat/';
  var csrftoken = Cookies.get('csrftoken');
  function csrfSafeMethod(method) {
    // these HTTP methods do not require CSRF protection
    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
  }

  $.ajaxSetup({
    beforeSend: function(xhr, settings) {
      if (!csrfSafeMethod(settings.type) &amp;&amp; !this.crossDomain) {
        xhr.setRequestHeader("X-CSRFToken", csrftoken);
      }
    }
  });

  var $input = $('#input');
  var $sayButton = $('#sayButton');
  var $answer = $('#answer');

  function submitInput() {
    var inputData = {
      'text': $input.val()
    }
    var $submit = $.ajax({
      type: 'POST',
      url: chatterbotUrl,
      data: JSON.stringify(inputData),
      contentType: 'application/json'
    });

    $submit.done(function(statement) {
        $answer.val(statement.text);
        // Clear the input field
        $input.val('');
        //alert(statement.text)
    });

  $sayButton.click(function() {
    submitInput();
  });
</code></pre>

<p>原理是这样的，首先你需要通过urls.py文件指定在请求特定url的时候，触发的函数。这个函数是在view.py中定义的，也就是post函数。post函数需要至少一个参数，也就是request，request必须包含一个text的属性才能被read()出来而不出错。之后，post函数会返回一个JsonResponse，其中机器人的回答可以通过statement.text来获取和使用，见chat.html中的$submit.done函数。</p>

<p>当不知道传递的是何值时，可以通过html 中的alert或者python中的print（）来监听调试。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to run JS node and appche]]></title>
    <link href="http://zhangchunlei.com/blog/2017/11/27/how-to-run-js-node-and-appche/"/>
    <updated>2017-11-27T11:50:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/11/27/how-to-run-js-node-and-appche</id>
    <content type="html"><![CDATA[<p>最近接触了不少Java script的代码，但是如何让这些代码运行起来呢？</p>

<p>有两个办法最可行，一个是node，一个是开服务器appche。</p>

<p>对应的可以参考这两个网页：<br/>
node.js&#8211;><a href="https://nodejs.org">https://nodejs.org</a><br/>
appche&#8211;><a href="http://www.jianshu.com/p/d006a34a343f">http://www.jianshu.com/p/d006a34a343f</a></p>

<p>Node可以直接在本地运行javascript，比如读写文件。<br/>
appche直接开服务器来实现数据的储存，可以配合mysql一起使用。</p>

<p>比如Node读文件的代码(demo_readfile.js)：</p>

<pre><code>var http = require('http');
var fs = require('fs');
http.createServer(function (req, res) {
  fs.readFile('demofile1.html', function(err, data) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(data);
    res.end();
  });
}).listen(8080);
</code></pre>

<p>再比如Node写文件的代码（demo_fs_write.js）：</p>

<pre><code>var fs = require('fs');
//create a file named mynewfile3.txt:
fs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {
  if (err) throw err;
  console.log('Saved!');
});
</code></pre>

<p>Mac系统自带了Apache，需要设置和启动即可，具体设置可以查考上面简书的文章。</p>

<p>常用端口命令：</p>

<pre><code>httpd -v #查看apache的版本信息
sudo apachectl start
sudo apachectl stop
sudo apachectl restart
sudo apachectl -t #检测配置文件语法是否有错
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超级城市与潜在的机会]]></title>
    <link href="http://zhangchunlei.com/blog/2017/11/13/super-city-and-abc/"/>
    <updated>2017-11-13T18:36:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/11/13/super-city-and-abc</id>
    <content type="html"><![CDATA[<p>超级城市是一个大趋势。全球有越来越多的超大城市涌现，而且这些超大城市还会变得越来越大。超级城市是指人口超过1000万的超级大城市，目前全球有40多个，中国有10个左右这样的超级城市：重庆、上海、北京、天津、成都、广州、深圳、哈尔滨、苏州、武汉。</p>

<p>超级城市有什么好的？交通拥挤、空气污染这些大城市病难道还有人去吗？很多人打着这样的旗号，逃离北上广。实际上，目前人口高度聚集还是有非常大的优势，特别是大规模密集协作和生产上。此外，科技可以医治大城市病，并且创造很多新兴产业。</p>

<p>超大城市的优势：<br/>
1、密集城市可以提高协作效率。<br/>
2、大城市可以催生专门的服务。超级城市会让每个人有发展专长的机会。 <br/>
3、随着生活的智能化，大城市还提供了大数据。<br/>
4、集体创新。</p>

<p>机会属于有思考、有准备的行动者。每个人都应该努力给自己创造机会。树立看到机会勇于行动的决心。提升自己的管理意识、财务意识、产品意识。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Science Theater]]></title>
    <link href="http://zhangchunlei.com/blog/2017/11/12/science-theater/"/>
    <updated>2017-11-12T10:44:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/11/12/science-theater</id>
    <content type="html"><![CDATA[<p>虽然科学推动社会发展的力量已经被广泛认可，但是科学家以及他们的生活史常常不为人所知。</p>

<pre><code>比如伽利略有过3个孩子，他为了专心研究，让他的一个朋友娶了跟了自己多年的女人，  
把自己的女儿送到了修道院当修女。为了筹集资金进行天文观测，还许诺用捐助者的  
姓名命名新发现的行星。  
</code></pre>

<p>普及科学，其实不仅要普及科学知识，其实还应该增强大众对科学家的理解。在学校里，我们采用的方式通常是科学史的说教。这种方式对有考试要求的学生也许有用，但是对一般大众而言，几乎必然失败。</p>

<p>那么，如何让大众了解科学家以及他们的科学发现呢？科学戏剧提供了一种可选的途径。</p>

<p>科学戏剧作为科学过程的隐喻，可以在一定程度上反映科学家的生活史，尽管戏剧必然会有虚构的成分。但是，即便是这种虚构的成分，仍然有助于公众对科学家有更多的认识和批判。虚构在某种程度上正好梳理了批判的靶子。</p>

<p>那么科学戏剧是如何反应科学家的生活史的呢？对应的关系框架如下：<br/>
1、科学家作为角色<br/>
性格和特点<br/>
主角和配角</p>

<p>2、实验室作为舞台<br/>
科学工具、物品作为角色</p>

<p>3、科学概念：源起和最终阶段<br/>
争议作为情节驱动力<br/>
干扰事件</p>

<p>每个故事的构成要素：情境、开头、意外、结尾。比如下面的一段故事情节：</p>

<pre><code>一天晚上，牛顿躺在苹果树下的睡椅上休息。一颗苹果掉了下来，……
但是月亮却还在移动，没有掉落下来，这激发了牛顿的思考。为什么，苹果会掉下来，
而月亮不会。如果以很高的速度把苹果抛出去，苹果会不会像月亮一样永远不会掉下来呢？  
最终牛顿发现了引力。
</code></pre>

<p>关于科学戏剧的思考：<br/>
What is the educational value of science theater? Nature of science; the life history of scientists; the process of sciences; what else?</p>

<p>Science theater may not be real, but science theater repopulates sciences.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use mermaid to render Graph]]></title>
    <link href="http://zhangchunlei.com/blog/2017/11/10/use-mermaid-to-render-graph/"/>
    <updated>2017-11-10T17:48:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/11/10/use-mermaid-to-render-graph</id>
    <content type="html"><![CDATA[<p>Mermaid是一个可以把markdown格式代码，渲染成流程图的工具。<br/>
git:https://github.com/knsv/mermaid/
在octopress上实现mermaid的方法参考：http://mostlyblather.com/blog/2015/05/23/mermaid-jekyll-octopress/</p>

<p>比如下面的代码：</p>

<pre><code>graph TD
A[Christmas] --&gt;|Get money| B(Go shopping)
B --&gt; C{Let me think}
C --&gt;|One| D[Laptop]
C --&gt;|Two| E[iPhone]
C --&gt;|Three| F[Car]
</code></pre>

<p>渲染的结果如下：<br/>
<img src="https://github.com/lukezhg/Freyja/raw/master/mermaid.png" alt="mermaid graph" /></p>

<div class="mermaid">
graph TD
A[Christmas] &#8211;>|Get money| B(Go shopping)
B &#8211;> C{Let me think}
C &#8211;>|One| D[Laptop]
C &#8211;>|Two| E[iPhone]
C &#8211;>|Three| F[Car]
</div>




<script src="http://zhangchunlei.com/javascripts/mermaid.min.js"></script>


<script>mermaid.initialize({startOnLoad:true});</script>


<p>sublime有一个<a href="https://packagecontrol.io/packages/Mermaid">插件</a>可以在浏览器中预览效果：<br/>
From the Command Palette: Mermaid: View In Browser</p>

<p>快捷键：shift+command+p</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[STEM &amp; Love]]></title>
    <link href="http://zhangchunlei.com/blog/2017/11/04/stem-and-love/"/>
    <updated>2017-11-04T12:02:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/11/04/stem-and-love</id>
    <content type="html"><![CDATA[<p>旁白：有人向往远方，有人向往床上</p>

<p>（大我来到小爱的床前，小爱还在睡觉。）</p>

<p>我：有那么多觉要睡吗？睡那么多，死了之后不怕失眠吗？</p>

<p>爱：谁在唠唠叨叨的呢？把我的美梦都惊扰了！</p>

<p>我：还睡啊！该去上裴老师的STEM课了！</p>

<p>爱：啊今天有课？什么课？什么课？</p>

<p>我：STEM课</p>

<p>爱：弹（tan）幕课有什么好上的？网上不到处都是！</p>

<p>我：姐姐，不是弹（tan）幕，是弹（dan）幕，去去去。 不是弹（tan）幕，也不是弹（dan）幕。是stem，S.T.E.M</p>

<p>爱：嗨，S.T.E.M，我以为是什么呢？那我更要去睡觉了？</p>

<p>我：啊！为什么？</p>

<p>爱：睡觉很重要啊，不是S。T。E。M。吗，第一字母是不是就是S？</p>

<p>我：对呀</p>

<p>爱：S吗，S代表的是SLEEP，当然要睡好了。</p>

<p>我：等下，等下，STEM的S好像是Science，科学吧。</p>

<p>爱：什么SCIENCE，科学能有睡觉重要吗？</p>

<p>我：俄，那T又代表什么？</p>

<p>爱：T都不知道，T代表的是Think啊，思考啊，还真拿我当猪了？只知道睡啊，偶尔思考思考人生，思考思考未来，思考思考如何提高睡眠质量。</p>

<p>我：果然还是只知道睡，哪，哪我问你，E代表什么？</p>

<p>爱：E啊，E就是吃啊，Eat懂不。</p>

<p>我：还真是狗改不了吃屎，除了睡就是吃，三句话不离本行。</p>

<p>爱：怎么说话呢，怎么说化呢，吃可是我们中国的文化精华啊，你不不知道我们中华民族几乎三分之一的时间和智慧都用在吃上了。</p>

<p>我：真的吗？精华也不能乱涂啊，E不是engineering吗！</p>

<p>爱：Engineering是什么鬼？</p>

<p>我：Engineering是工程的意思，浅薄了吧？</p>

<p>爱：不浅薄，工程是吧，工程不就是干活，一边是干活，一边是吃，你选哪一个，傻子都会选。</p>

<p>我：俄……</p>

<p>爱：当然是吃了，笨蛋。</p>

<p>我：天啊，哪，哪，哪M呢？我问你</p>

<p>爱：俄，这个，这个，M就是make啊，你真拿我当猪啊，只知道吃是吧。我还会创作。我可是当今最火的创客，什么黑客、慕课、微课、蜗居客，都统统给我靠边站，我是创客。I am a Maker。I am a Maker。</p>

<p>我：什么Maker，我看你是谣言的Maker。别信她的，同学们，STEM是科学、技术、工程、数学的缩写，不是什么Sleep、Think、Eat、Make的缩写，而且现在STEM已经慢慢变为STEAM了，这个新增加的A就是ART。art，艺术懂不？</p>

<p>爱：什么Art呀，不，不是ART。确实STEM正在变为STEAM，不过这个A不是什么art。</p>

<p>我：那是什么？</p>

<p>爱：是AI懂不，现在最火的，讨论的最热的，各行各业都心惊胆战的</p>

<p>我：什么呀？</p>

<p>爱：AI AI，就是爱呀。瞧你的英文这么溜儿，拼音都没学好。你以为我只知道到吃了睡，睡了吃啊！除了思考、创造，没有别的爱好？告诉你，我的爱好就是爱啊！如果生活没有爱，还有什么可期待？对不起，我要去爱了，拜拜，这才是生活！</p>

<p>我：AI不是artificial intelligence吗？爱，等我一下，爱，你没穿鞋！</p>

<p>科学大本营——第一季</p>

<p>STEM&amp;爱：主演：大我，小爱。 编剧：chunlei</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build a chat bot with ChatterBot Django]]></title>
    <link href="http://zhangchunlei.com/blog/2017/10/21/build-a-chat-bot-with-chatterbot-django/"/>
    <updated>2017-10-21T22:27:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/10/21/build-a-chat-bot-with-chatterbot-django</id>
    <content type="html"><![CDATA[<p>ChatterBot Django是基于Python和Django框架构建的一个聊天程序。</p>

<p>其使用的基本方法可以查看<a href="http://chatterbot.readthedocs.io/en/stable/examples.html">这个文档</a>。</p>

<p>根据已有的对话进行训练（其中对话数据储存在chatterbot_corpus文件夹中）</p>

<pre><code>python manage.py train
</code></pre>

<p>打开服务器(访问[http://127.0.0.1:8000]浏览)</p>

<pre><code>python manage.py runserver
</code></pre>

<p>如果修改数据库文件的话，比如删除db.sqlite3文件，就需要运行下面的命令来从新配置框架。</p>

<pre><code>python manage.py migrate
</code></pre>

<p>修改settings.py文件。<br/>
<code></p>

<pre><code># ChatterBot settings
CHATTERBOT = {
'name': 'Django ChatterBot Example',
'trainer': 'chatterbot.trainers.ChatterBotCorpusTrainer',
'training_data': [
     'chatterbot.corpus.english.greetings',#set the traing data
     'chatterbot.corpus.custom.myown',
     'chatterbot.corpus.swedish.food',
],
'django_app_name': 'django_chatterbot'
}
</code></pre>

<p></code>></p>

<p>修改chatterbot_corpus文件夹中训练数据。<br/>
训练数据格式如下
<code></p>

<pre><code>categories:
- greetings
conversations:
- - Hello
  - Hi
- - Hi
  - Hello
- - Greetings!
  - Hello
- - Hello
  - Greetings!
- - Hi, How is it going?
  - Good
- - Hi, How is it going?
  - Fine
- - Hi, How is it going?
  - Okay
</code></pre>

<p></code></p>

<p>可以尝试利用英语8000句来训练。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[印象管理]]></title>
    <link href="http://zhangchunlei.com/blog/2017/09/28/impression/"/>
    <updated>2017-09-28T09:13:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/09/28/impression</id>
    <content type="html"><![CDATA[<p>回想一下你去过的地方、见过的人、看过的书，大多可能都不记得了，但是有些却印象深刻，想忘也忘不了。<br/>
<img src="http://image.99ys.com/2015/1029/20151029095741326.jpg" alt="艾琳·汉森的开放式印象主义" />
画家：艾琳·汉森</p>

<p>什么是印象？</p>

<p>百度词条这样描述：</p>

<pre><code>印象是个体（认知主体）头脑中有关认知客体的形象。个体接触新的社会情境时，总是按照以往经验，将情境中的人或事进行归类，明确它对自己的意义，使自己的行为获得明确定向，这一过程称为印象形成。印象是个体适应环境的一种方式。    
</code></pre>

<p>印象是如何形成的？<br/>
印象形成的机制可能比较复杂，而且形成的路径和模式可能也多种多样。但一般遵循[一致性原则]
，也就是主体对客体的印象应该是一致的，而不是矛盾的。比如你对一个人的印象，要么是积极的，要么是消极的，即便有矛盾的信息，也会以一个方面为主而消减这种矛盾。</p>

<p>印象是主体对客体的观察剪影。在主客体相互接触的过程中，主体通过窗口对客体进行采样，这种采样可以是刻意的，也可以是随机的，然后主体需要对其进行归类，好或者不好，接触或者远离，信任或者怀疑，主体需要选择一个立场，这种立场以及客体的简化信息会储存在脑海里，供主体行动参考。</p>

<p>印象有何意义？<br/>
印象对于个体适应环境变化具有重要意义。虽然印象具有偶然性、片面性和静态性，但是它为主体作出适应的行动提供了参照，而且加入主体可以根据与客体互动的新信息对印象作出调整（听人劝），那么也可以避免印象造成的误导。</p>

<p>如何做好印象管理？<br/>
如果别人对你有好的印象，那么他们就愿意亲近你、信任你和帮助你，反之则不然。因此，管理自己的印象十分重要，让自己的衣着、言行、品德经得起考验很重要。简而言之，别人对你的印象就是你最好的名片。</p>

<p>如何管理自己的印象呢？当然是从一点一滴，从每个细节做起，而且要有作为、有表现力。张生泉老师主张人要有表现力，这种表现力不是虚伪的演戏和作秀，而是真实的表现和作为。他主张中学生要多学一学戏剧，在虚拟的戏剧中体验体验人生，锻炼这种表现力。</p>

<p>此外也要了解相关的心理效应，如首因效应、近因效应、光环效应、刻板印象（人们对事务的固有看法）。意识到印象形成的关键窗口期以及印象存在的问题，从而能管理好自己在别人心目中的印象，同时也能辩证的看待自己对别人的印象。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何写文章摘要]]></title>
    <link href="http://zhangchunlei.com/blog/2017/09/18/how-to-write-a-summary/"/>
    <updated>2017-09-18T09:34:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/09/18/how-to-write-a-summary</id>
    <content type="html"><![CDATA[<p>写文章摘要主要是练习概括和书面表达能力。研究写文献综述，第一步就是写文章摘要。写文章摘要，很多同学认为就是摘录句子，这只是最低的层次，当然能找到最关键的句子也是必要的第一步。第二步就是找到作者的主要观点以及证据，进而形成文章的框架。第三步是用自己的语言概括出主要观点以及证据，并且按照自己的逻辑从新组织。</p>

<p>那么如何评价文章摘要写的好不好呢？华东师范大学杨向东教授曾经展示过一个标准，我个人比较推崇：<br/>
文章摘要写作的评价标准：
0分<br/>
没有提交或者不符合要求。 <br/>
1分<br/>
陈述完全从材料中复制，孤立、不完整。观点不完整，缺乏组织。 <br/>
2分<br/>
陈述间有说联系，但是不完整，绝大多数为材料原句。有时出现过多的细节。<br/>
3分
陈述有更多的组织和整合，并试图用自己的语言表述。仍然有较强的照搬痕迹。包括了大多数要点，但是有一到两个重要观点缺失。<br/>
4分
能用自己的语言进行组织和整合，有时还有轻微照搬倾向，但不明显。包括了所有主要观点，偶尔要点理解有所偏差。<br/>
5分<br/>
能用自己的语言进行陈述，组织合理、整合恰当。没有任何照搬的现象。包括所有主要观点，且理解正确。</p>

<p>根据这个标准，写作者可以对自己的summary进行自评。这样在会写summary的基础上，写review就有基础了，也不会总是犯罗列和照抄等低级错误。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tips for mac users]]></title>
    <link href="http://zhangchunlei.com/blog/2017/09/07/tips-for-mac-users/"/>
    <updated>2017-09-07T18:10:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/09/07/tips-for-mac-users</id>
    <content type="html"><![CDATA[<h2>快捷键：</h2>

<p>Finder
显示隐藏文件：shift + command + .<br/>
回到主目录：shift+command+H</p>

<p>需要自己设置键盘快捷键，利用关键字 如 Copy， Cut， Paste， Select All。
复制：command+c
粘贴：command+v
拖拽的功能很厉害。</p>

<h2>bash命令：</h2>

<p>复制：cp
目录：cd
列表：ls
移动：mv  源文件 目标文件</p>

<h2>批量重命名：</h2>

<p>Mac自带有这种功能，你只需要多选文件，然后右键，选择重命名这些文件，就会弹出批量重命名的窗口。</p>

<h1>设置文件：</h1>

<pre><code>vi ~/.bash_profile  #编辑设置文件
ls -l -a   列出指定目录下文件
           -l 显示文件的详细信息
           -a 显示目录下所有文件（包括隐藏文件）
           -d 显示指定目录pwd  显示当前的工作目录的路径
touch 目录名：查看指定文件，若没有此文件则创建空文件；更改文件时间戳
chmod 更改指定文件或目录的权限
</code></pre>

<h2>进程管理</h2>

<pre><code>ps aux 静态查看进程
top 动态查看进程
kill 杀死进程
kill -9 pid       杀死指定进程
</code></pre>

<h2>其他命令</h2>

<pre><code>man  显示帮助文件（按q退出）
ifconfig 查看或修改ip地址
sudo 以root权限执行一次命令
clear / ctrl+L   清屏
ctrl+C     无条件终止
</code></pre>

<h2>文件操作</h2>

<pre><code>rm –rf * 强制删除当前目录下所有文件
rm -rf        删除文件或目录
cp -r         复制文件
mv         移动文件
stat 文件名  查看文件详细信息
find  查找文件
find / -name *       查找文件
mkdir   创建新目录
rmdir   只能删除空目录
</code></pre>

<h2>修改文件：</h2>

<pre><code>echo:输出字符串或变量值
echo “字符串” &gt; file  #用&gt;时，指定的文件若不存在，创建文件；若存在，覆盖原文件内容
echo “字符串” &gt;&gt; file #用&gt;&gt;时，指定的文件若不存在，创建文件；若存在，在原文件内容后追加内容
</code></pre>

<h2>ssh文件同步</h2>

<p>同步到服务器</p>

<pre><code>scp -r localhome/* root@ip:/home/localhome/
</code></pre>

<p>同步到本地</p>

<pre><code>scp -r root@ip:/home/localhome/* localhome／
</code></pre>

<h2>多个Python共存</h2>

<pre><code>pyenv versions #参看版本信息
pyenv global 3.6.3 #切换3
pyenv global 2.7.13 #切换到2
source ~/.bash_profile
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Haxe Sublime PackageControl]]></title>
    <link href="http://zhangchunlei.com/blog/2017/09/07/haxe-sublime-packagecontrol/"/>
    <updated>2017-09-07T09:50:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/09/07/haxe-sublime-packagecontrol</id>
    <content type="html"><![CDATA[<p>Flash已经慢慢被H5取代，但是最近缺还是用flash编制了一个小游戏，一个太空穿越游戏。</p>

<p>因此，想尝试将其转化为H5，最直接的方法就是手动改，这种方法最有效直接，也最靠谱。</p>

<p>但是本着懒人的精神，google了其他的方法，方法有很多种，比如swiffy就是一种能将swf转化成h5的应用，而且特别是对于只有动画的flash和as2.0特别好用。但是对于我用AS3写的游戏，不靠谱。</p>

<p>于是又找到了一种方法，就是用haxe这种跨语言的程序语言，它继承了很多AS的特性，因此很容易改写代码，然后也很容发布称为H5，不过还是绕不开人工改写。其实有一个AS3HX的插件可以自动转化代码，我是一了一下，出现错误。也就放弃了。</p>

<p>但是，我却对Haxe产生了兴趣，并且安装了haxe和openfl，还找了一个<a href="http://haxecoder.com/post.php?id=14">现成的代码</a>玩了一下，还是挺容易上手的。</p>

<p>大体过程bash如下：</p>

<pre><code>
openfl create project ProjectName #新建项目
cd ProjectName #进入项目目录
sublime Source/Main.hx #修改代码
openfl test html5 #测试，或者 openfl test neko 或者 openfl test flash
</code>></pre>


<blockquote></blockquote>

<p>这个例子打开了Haxe的窗口，用这种程序代码就不担心发布的产品因为受到语言软件限制而必须改写，因为直接换一种形式发布就ok了。</p>

<p>下面是展示一张图片的代码，来自：<a href="http://www.openfl.org/learn/tutorials/displaying-a-bitmap/">openfl官网</a></p>

<pre><code>
package;

import openfl.display.Bitmap;
import openfl.display.Sprite;
import openfl.Assets;

class Main extends Sprite {

    public function new () {

        super ();

        var bitmapData = Assets.getBitmapData ("assets/openfl.png");
        var bitmap = new Bitmap (bitmapData);
        addChild (bitmap);

        bitmap.x = (stage.stageWidth - bitmap.width) / 2;
        bitmap.y = (stage.stageHeight - bitmap.height) / 2;

    }


</code></pre>


<p>要注意的是，展示的图片，放在assets文件夹中，然后直接调用即可。</p>

<p>下面是一个推球游戏代码：<br/>
http://haxecoder.com/post.php?id=14
我们需要修改项目目录下的application.xml文件，来修改窗口大小和背景等属性。<br/>
下面的两行代码就是设定窗口大小为 500x500，背景色为#333333:</p>

<pre><code>
<window background="#333333" fps="60" />
<window width="500" height="500" unless="mobile" />
</code></pre>


<p>在测试这些代码的时候，我发现在sublime、终端、文件夹之间切换效率特别低，于是专门搜索了一下sublime的用法，其实sublime有很多插件可用，比如sidebar enhancement，haxe，markdown，terminal等，只需要从preference-package control进去，然后install相应的插件即可。这里大有文章可做。</p>

<p>为了提高文件夹切换的效率，可以通过添加文件夹到项目的办法，这样sublime侧边栏就可以直接切换多个文件。</p>

<p>为了让自发布博客更有效，我还在自己的~/.bash_profile中添加了alias语句，它的格式是：<br/>
alias [别名]=&#8217;[指令名称]&#8217;)</p>

<p>目的是在终端输入 rake的时候，系统会自动解读为 bundle exec rake。</p>

<pre><code>
alias rake='bundle exec rake'
</code></pre>


<p>通过这么一番折腾，mac的使用效率提升了不少。</p>

<p>昨夜西风凋碧树
独上高楼，望断天涯路</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Space Craft Game]]></title>
    <link href="http://zhangchunlei.com/blog/2017/09/04/spcae-craft-game/"/>
    <updated>2017-09-04T15:08:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/09/04/spcae-craft-game</id>
    <content type="html"><![CDATA[<h3>object</h3>

<object 
codebase="http://download.macromedia.com/pub/shockwave/
cabs/flash/swflash.cab#version=6,0,40,0" 
width="550" height="400" 
 id="mymoviename"> 
<param name="movie"  value="https://raw.github.com/lukezhg/Freyja/master/space-craft.swf" /> 
<param name="quality" value="high" /> 
<param name="bgcolor" value="#ffffff" /> 

<embed src="https://raw.github.com/lukezhg/Freyja/master/space-craft.swf" quality="high" bgcolor="#ffffff"
width="550" height="400" 
name="mymoviename" align="" type="application/x-shockwave-flash" 
pluginspage="http://www.macromedia.com/go/getflashplayer"> 
</embed> 
</object>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[deep learning]]></title>
    <link href="http://zhangchunlei.com/blog/2017/08/25/deep-learning/"/>
    <updated>2017-08-25T11:00:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/08/25/deep-learning</id>
    <content type="html"><![CDATA[<p>机器学习是人工智能中非常重要的一个分支。而深度学习则是机器学习中一个重要的方向。所以人工智能、机器学习和深度学习三个概念的关系是：<br/>
【人工智能【机器学习【深度学习】】】</p>

<p>在教育领域和计算机科学领域的深度学习并不是一个概念。</p>

<p>这里主要尝试利用keras和python来进行深度学习模拟。</p>

<p>keras是一个深度学习模拟的良好平台，并且它完全基于python构建，具有简易性和扩展性。一个典型的keras模型如下：</p>

<pre><code>
from keras.models import Sequential
from keras.layers import Dense, Dropout, Activation
from keras.optimizers import SGD

# Generate dummy data
import numpy as np
x_train = np.random.random((1000, 20))
y_train = keras.utils.to_categorical(np.random.randint(10, size=(1000, 1)), num_classes=10)
x_test = np.random.random((100, 20))
y_test = keras.utils.to_categorical(np.random.randint(10, size=(100, 1)), num_classes=10)

model = Sequential()
# Dense(64) is a fully-connected layer with 64 hidden units.
# in the first layer, you must specify the expected input data shape:
# here, 20-dimensional vectors.
model.add(Dense(64, activation='relu', input_dim=20))
model.add(Dropout(0.5))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation='softmax'))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss='categorical_crossentropy',
              optimizer=sgd,
              metrics=['accuracy'])

model.fit(x_train, y_train,
          epochs=20,
          batch_size=128)
score = model.evaluate(x_test, y_test, batch_size=128)
</code></pre>


<p>上面这个例子是一个贯序模型，它是一条道走到头的。如果是多口输出或者有分叉结构的模型，这需要用函数式模型，见<a href="https://keras-cn.readthedocs.io/en/latest/getting_started/functional_API/">函数式模型文档</a>。</p>

<p>其他例子见：<a href="https://keras-cn.readthedocs.io/en/latest/getting_started/sequential_model/">官方文档</a></p>

<p>（1）数据定义<br/>
定义训练数据和检验数据，必要的时候需要对数据进行处理，从而使的数据的形状和大小符合要求。</p>

<p>（2）模型定义 <br/>
定义输入层、输出层以及中间的隐藏层，层的类别和神经元数量。</p>

<p>（3）训练<br/>
利用训练数据对模型进行fit，使得模型的参数与训练数据更好的吻合。</p>

<p>（4）检验<br/>
利用检验数据对模型及其参数进行检验，通常会依靠正确率以及gradient descent对模型进行评估和完善。</p>

<p>（5）应用<br/>
当一个模型经过训练之后能够很好的完成预测任务时，那么就可以保存模型以及相应的权重参数，在需要的时候直接调用完成任务即可。比如，讯飞的语言识别，其参数是经过大量数据的长时间训练得到的，但是我们输入语音后，后台可以及时给我们呈现文字，说明它也是调用了已有的参数，否者估计几天后才能收到讯飞发给我们的语音识别文字了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[社会需要与进化需要]]></title>
    <link href="http://zhangchunlei.com/blog/2017/08/11/relationships/"/>
    <updated>2017-08-11T15:37:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/08/11/relationships</id>
    <content type="html"><![CDATA[<p>人是社会关系的总和。人也是生物进化的产物。</p>

<p>如果社会需要与进化需要相和谐，那么人就容易幸福。如果相矛盾，那么人就不容易幸福，因为他面临着取舍和选择，任何的选择都是有成本的。</p>

<p>因此，人有两种本事，一种本事是解决进化需要。一种本事是解决社会需要。实际上，社会需要是人进化到一定阶段的产物，本质上也是一种进化需要。只不过这种需要让人从个体生存的焦虑中解脱出来，扩展到对群体或种族生存的关照。</p>

<p>在面对和解决两种焦虑困惑时，佛家、道家和儒家采用了完全不同的方法。佛家是屏弃，无论是进化需要还是社会需要，无欲则刚。道家是顺应，无为而无不为，最后摆脱世俗纠缠、成仙得道。儒家是节制，适度满足同时节制，然后入世成圣。所谓的佛、仙、圣只是一种理想性的终极追求，不能当真的。但是处世的哲学和立场确是实实在在的。</p>

<p>三种哲学之中，佛家的问题解决最彻底，道家的世事洞察最清晰，儒家的人生态度最积极。它们可以分别治疗人的贪婪、沉迷和消极。</p>
]]></content>
  </entry>
  
</feed>

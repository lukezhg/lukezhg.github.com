<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tags: Ubuntu | Chunlei's Blog]]></title>
  <link href="http://zhangchunlei.com/tag/ubuntu/atom.xml" rel="self"/>
  <link href="http://zhangchunlei.com/"/>
  <updated>2013-10-09T09:06:39-04:00</updated>
  <id>http://zhangchunlei.com/</id>
  <author>
    <name><![CDATA[chunlei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Ubuntu中布置和使用GAE]]></title>
    <link href="http://zhangchunlei.com/blog/2013/08/31/play-gae-in-ubuntu/"/>
    <updated>2013-08-31T18:07:00-04:00</updated>
    <id>http://zhangchunlei.com/blog/2013/08/31/play-gae-in-ubuntu</id>
    <content type="html"><![CDATA[<p>本来在windows下我是建立了GAE开发环境的，但是python的版本是2.5,GAE的数据库又升级了，但是我又不想再windows下从新布置，觉得很麻烦。所以开始在Ubuntu中布置GAE。事实上在Ubuntu中的布置简单的难以相信。<br/>
首先，下载<a href="https://developers.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python">Google App Engine SDK for Python</a><br/>
然后解压到你设定的目录（如 /home/）。布置就完成了。</p>

<p>当然有些人喜欢再修改环境变量或者<a href="http://www.php100.com/html/webkaifa/Linux/2010/0807/6386.html">使用In建立字符链接</a>，不过其实不做这些复杂的设置一样很好用。</p>

<p>所以我就什么都没有做。当然前提你已经安装好python2.7了。</p>

<p>下面简单说说，如何发布和测试你的第一个app。过程与windows下差不多，具体可以参考<a href="http://zhangchunlei.com/blog/2010/02/18/knowlege-of-gae/">这里</a>。</p>

<p>首先建立在解压好的google_appengine文件夹中建立一个myapps文件夹用于存放我自己的项目，然后在myapps文件夹下建立一个helloworld文件夹，并在这个文件夹下新建两个文件：helloworld.py以及app.yaml。两个文件的代码可以从<a href="https://developers.google.com/appengine/docs/python/gettingstartedpython27/helloworld">这里</a>拷贝。<br/>
测试你的项目，在google_appengine文件下打开终端，使用如下命令：</p>

<pre><code>
$ python dev_appserver.py myapps/helloworld
</code></pre>


<p>打开<a href="http://localhost:8080/">http://localhost:8080/</a>查看效果。</p>

<p>ctrl+C 终止测试。</p>

<p>使用如下命令上传项目（前提是你已经申请并在GAE上建立好了hellowrld应用）：</p>

<pre><code>
$ python appcfg.py update myapps/helloworld
</code></pre>


<p>这样你的app就上传好了，打开地址欣赏一下吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu命令手册]]></title>
    <link href="http://zhangchunlei.com/blog/2013/08/31/ubuntu-command-brief/"/>
    <updated>2013-08-31T12:33:00-04:00</updated>
    <id>http://zhangchunlei.com/blog/2013/08/31/ubuntu-command-brief</id>
    <content type="html"><![CDATA[<p>在摸索过程中经常使用的命令： <br/>
安装和执行程序<br/>
-  sudo apt-get install appname  安装程序应用
-  make install 编译并安装 .tar.gz2 <br/>
-  sh xx.sh  执行.sh文件<br/>
-  python xx.py 执行py文件<br/>
-  sudo su 切换到root用户<br/>
-  sudo exit 推出root用户</p>

<p>察看RVM可供安装的ruby版本和现用版本<br/>
-  rvm list known<br/>
-  rvm list</p>

<p>编辑文本文档<br/>
-  vi filename<br/>
-  gedit filename</p>

<p>发布octopress博文<br/>
-  rake generate<br/>
-  rake preview<br/>
-  rake deploy<br/>
-  rake new_post["post title"]</p>

<p>文件操作<br/>
-  cp  复制文件 到另外一个目录<br/>
-  mv 文件 文件目录<br/>
-  rm 文件名文件名删除一个文件或多个文件<br/>
-  rm –rf 非空目录名删除一个非空目录下的一切</p>

<ul>
<li>touch 文件名创建一个空文件</li>
<li>mkdir 目录名创建一个目录</li>
<li>rmdir 空目录名删除一个空目录</li>
<li>lsusb 查看usb接口</li>
<li>lspci 查看pci接口</li>
</ul>


<p>批量改名<br/>
-  rename 's/lecture/slide/' *.jpg<br/>
将当前目录中所有jpg文件名中lecture替换为slide。</p>

<p>批量替换文件内容<br/>
-  perl -pi -e 's|Windows|Ubuntu|g' <code>find ./ -type f</code></p>

<blockquote><p>查找当前目录下面的所有文件，把内容包含Windows的所有字符串替换成Ubuntu。如果要查找的字符窗包含特殊字符如 ()/*$&amp;’`| 还得用 \ 转义
<a href="http://www.linuxdiyf.com/viewarticle.php?id=90071">http://www.linuxdiyf.com/viewarticle.php?id=90071</a></p></blockquote>
]]></content>
  </entry>
  
</feed>

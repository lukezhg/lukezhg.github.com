<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tags: swf | Chunlei's Blog]]></title>
  <link href="http://zhangchunlei.com/tag/swf/atom.xml" rel="self"/>
  <link href="http://zhangchunlei.com/"/>
  <updated>2019-01-30T17:06:57+08:00</updated>
  <id>http://zhangchunlei.com/</id>
  <author>
    <name><![CDATA[chunlei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swf send data to Java Script]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script/"/>
    <updated>2017-12-29T19:21:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script</id>
    <content type="html"><![CDATA[<p>Flash制作动画非常便捷，但是如何能够把用swf文件收集的数据发送給JS处理呢？下面是一个简单的例子：<br/>
1、首先在html网页中通过object嵌入swf文件</p>

<p>```
</p>

<pre><code>&lt;body&gt;
&lt;object type="application/x-shockwave-flash" data="{% static "flash/test.swf" %}"  name="test" width="550" height="400"&gt;
&lt;param name="allowScriptAccess" value="sameDomain" /&gt; 
&lt;param name="movie" value="{% static "flash/test.swf" %}" /&gt;
&lt;/object&gt;
&lt;/body&gt;
</code></pre>

<p>
```</p>

<p>2、在网页的头部嵌入要调用的函数hello</p>

<p>```</p>

<pre><code>&lt;script&gt;
    function hello(v){ 
        alert("hello: "+v);
        document.location.href = '/search';
    } 
    function thisMovie(movieName) { 
        if (navigator.appName.indexOf("Microsoft") != -1) { 
            return window[movieName] 
        } 
        else { 
            return document[movieName] 
        } 
    }
&lt;/script&gt;
</code></pre>

<p>```</p>

<p>3、编辑fla文件，建立一个文本框txt1和一个提交submit按钮</p>

<p>```</p>

<pre><code>package {
import flash.net.*;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.display.MovieClip;
import flash.external.ExternalInterface; 
public class test extends MovieClip {
    public function test(): void {
        submit.addEventListener(MouseEvent.CLICK, postForm);
    }
    private function postForm(evt: MouseEvent): void {
        ExternalInterface.call("hello", txt1.text); 
    }
}
</code></pre>

<p>```</p>

<p>4、实现的效果如下：<br/>
当你点击submit按钮时，swf文件会将txt1.text传递給hello函数，并且通过JS现实对话框“欢迎： 某某” 并且跳转到／search页面。</p>

<p>5、原理解释<br/>
fla文件中，导入了flash.external.ExternalInterface类，它是专门负责外部通信的。通过ExternalInterface.call方法，就可以调用object容器外部的函数hello。</p>

<p>6、JS调用AS函数的实现方法。<br/>
上面实现了AS调用JS并传递参数，那么反过来，JS是否可以调用AS函数呢？答案是肯定的。</p>

<p>AS类这样写：</p>

<p>```</p>

<pre><code>package {
    import flash.net.*;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.display.MovieClip;
    import flash.external.ExternalInterface;

    public class test extends MovieClip {
        public function test(): void {
            submit.addEventListener(MouseEvent.CLICK, postForm);
            ExternalInterface.addCallback("say", say); //regist 
        }

        private function say(txt: String) {
            txt2.text = txt;
        }

        private function postForm(evt: MouseEvent): void {
            //call js function
            ExternalInterface.call("hello", txt1.text);
        }
    }
}
</code></pre>

<p>```</p>

<p>Html这样写：</p>

<p>```html
</p>

<pre><code>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;title&gt;As communicate with JS&lt;/title&gt;
    &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script&gt;
        function hello(v){ 
            alert("hello: "+v);
            //document.location.href = '/search';
        }
        function thisMovie(movieName) { 
            if (navigator.appName.indexOf("Microsoft") != -1) { 
                return window[movieName] 
            } 
            else { 
                return document[movieName] 
            } 
        }
        $(document).ready(function(){
            $("#btn1").click(function(){
                $("#test1").text("Hello world!");
            });
            $("#btn2").click(function(){
                $("#test2").html("&lt;b&gt;Hello world!&lt;/b&gt;");
            });
            $("#btn3").click(function(){
                //$("#test3").val("Dolly Duck");
                var txt=$("#test3").val();
                thisMovie("test").say(txt);
            });
        });
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;object type="application/x-shockwave-flash" data="{% static "flash/test.swf" %}"  name="test" width="550" height="400"&gt;
    &lt;param name="allowScriptAccess" value="sameDomain" /&gt; 
    &lt;param name="movie" value="{% static "flash/test.swf" %}" /&gt;
    &lt;embed src="{% static "flash/test.swf" %}" name="test" quality="high" allowScriptAccess="always" swLiveConnect="true" type="application/x-shockwave-flash" width="550" height="400"&gt;&lt;/embed&gt;
    &lt;/object&gt;
    &lt;br&gt;
    &lt;p id="test1"&gt;This is a paragraph.&lt;/p&gt;
    &lt;p id="test2"&gt;This is another paragraph.&lt;/p&gt;
    &lt;p&gt;Input field: &lt;input type="text" id="test3" value="Mickey Mouse"&gt;&lt;/p&gt;
    &lt;button id="btn1"&gt;Set Text&lt;/button&gt;
    &lt;button id="btn2"&gt;Set HTML&lt;/button&gt;
    &lt;button id="btn3"&gt;Set Value&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>
```</p>

<p>7、遗留的问题：这样的写法谷歌浏览器没问题，但是火狐浏览器不成功，也就是不能把参数传到swf上。</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tags: flash | Chunlei's Blog]]></title>
  <link href="http://zhangchunlei.com/tag/flash/atom.xml" rel="self"/>
  <link href="http://zhangchunlei.com/"/>
  <updated>2020-08-07T15:32:24+08:00</updated>
  <id>http://zhangchunlei.com/</id>
  <author>
    <name><![CDATA[chunlei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swf send data to Java Script]]></title>
    <link href="http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script/"/>
    <updated>2017-12-29T19:21:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2017/12/29/swf-send-data-to-java-script</id>
    <content type="html"><![CDATA[<p>Flash制作动画非常便捷，但是如何能够把用swf文件收集的数据发送給JS处理呢？下面是一个简单的例子：<br/>
1、首先在html网页中通过object嵌入swf文件</p>

<p>```
</p>

<pre><code>&lt;body&gt;
&lt;object type="application/x-shockwave-flash" data="{% static "flash/test.swf" %}"  name="test" width="550" height="400"&gt;
&lt;param name="allowScriptAccess" value="sameDomain" /&gt; 
&lt;param name="movie" value="{% static "flash/test.swf" %}" /&gt;
&lt;/object&gt;
&lt;/body&gt;
</code></pre>

<p>
```</p>

<p>2、在网页的头部嵌入要调用的函数hello</p>

<p>```</p>

<pre><code>&lt;script&gt;
    function hello(v){ 
        alert("hello: "+v);
        document.location.href = '/search';
    } 
    function thisMovie(movieName) { 
        if (navigator.appName.indexOf("Microsoft") != -1) { 
            return window[movieName] 
        } 
        else { 
            return document[movieName] 
        } 
    }
&lt;/script&gt;
</code></pre>

<p>```</p>

<p>3、编辑fla文件，建立一个文本框txt1和一个提交submit按钮</p>

<p>```</p>

<pre><code>package {
import flash.net.*;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.display.MovieClip;
import flash.external.ExternalInterface; 
public class test extends MovieClip {
    public function test(): void {
        submit.addEventListener(MouseEvent.CLICK, postForm);
    }
    private function postForm(evt: MouseEvent): void {
        ExternalInterface.call("hello", txt1.text); 
    }
}
</code></pre>

<p>```</p>

<p>4、实现的效果如下：<br/>
当你点击submit按钮时，swf文件会将txt1.text传递給hello函数，并且通过JS现实对话框“欢迎： 某某” 并且跳转到／search页面。</p>

<p>5、原理解释<br/>
fla文件中，导入了flash.external.ExternalInterface类，它是专门负责外部通信的。通过ExternalInterface.call方法，就可以调用object容器外部的函数hello。</p>

<p>6、JS调用AS函数的实现方法。<br/>
上面实现了AS调用JS并传递参数，那么反过来，JS是否可以调用AS函数呢？答案是肯定的。</p>

<p>AS类这样写：</p>

<p>```</p>

<pre><code>package {
    import flash.net.*;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.display.MovieClip;
    import flash.external.ExternalInterface;

    public class test extends MovieClip {
        public function test(): void {
            submit.addEventListener(MouseEvent.CLICK, postForm);
            ExternalInterface.addCallback("say", say); //regist 
        }

        private function say(txt: String) {
            txt2.text = txt;
        }

        private function postForm(evt: MouseEvent): void {
            //call js function
            ExternalInterface.call("hello", txt1.text);
        }
    }
}
</code></pre>

<p>```</p>

<p>Html这样写：</p>

<p>```html
</p>

<pre><code>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;title&gt;As communicate with JS&lt;/title&gt;
    &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script&gt;
        function hello(v){ 
            alert("hello: "+v);
            //document.location.href = '/search';
        }
        function thisMovie(movieName) { 
            if (navigator.appName.indexOf("Microsoft") != -1) { 
                return window[movieName] 
            } 
            else { 
                return document[movieName] 
            } 
        }
        $(document).ready(function(){
            $("#btn1").click(function(){
                $("#test1").text("Hello world!");
            });
            $("#btn2").click(function(){
                $("#test2").html("&lt;b&gt;Hello world!&lt;/b&gt;");
            });
            $("#btn3").click(function(){
                //$("#test3").val("Dolly Duck");
                var txt=$("#test3").val();
                thisMovie("test").say(txt);
            });
        });
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;object type="application/x-shockwave-flash" data="{% static "flash/test.swf" %}"  name="test" width="550" height="400"&gt;
    &lt;param name="allowScriptAccess" value="sameDomain" /&gt; 
    &lt;param name="movie" value="{% static "flash/test.swf" %}" /&gt;
    &lt;embed src="{% static "flash/test.swf" %}" name="test" quality="high" allowScriptAccess="always" swLiveConnect="true" type="application/x-shockwave-flash" width="550" height="400"&gt;&lt;/embed&gt;
    &lt;/object&gt;
    &lt;br&gt;
    &lt;p id="test1"&gt;This is a paragraph.&lt;/p&gt;
    &lt;p id="test2"&gt;This is another paragraph.&lt;/p&gt;
    &lt;p&gt;Input field: &lt;input type="text" id="test3" value="Mickey Mouse"&gt;&lt;/p&gt;
    &lt;button id="btn1"&gt;Set Text&lt;/button&gt;
    &lt;button id="btn2"&gt;Set HTML&lt;/button&gt;
    &lt;button id="btn3"&gt;Set Value&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>
```</p>

<p>7、遗留的问题：这样的写法谷歌浏览器没问题，但是火狐浏览器不成功，也就是不能把参数传到swf上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash AS3 zip Manual]]></title>
    <link href="http://zhangchunlei.com/blog/2014/11/27/flash-as3-zip-manual/"/>
    <updated>2014-11-27T14:48:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2014/11/27/flash-as3-zip-manual</id>
    <content type="html"><![CDATA[<p>Action Script 3.0 简明手册<br/>
在上机前确保你的flash是cs3或者以上版本，如果是flash8或者以前的版本，下面有些代码会报错。<br/>
变量与常量<br/>
变量有不同的类型，一个变量由变量名和值构成。<br/>
<code/>
var value2:Number = 17;<br/>
const SALES_TAX_RATE:Number = 0.07;<br/>
</code><br/>
属性<br/>
简单地视为包含在对象中的“子”变量。</p>

<p><code/>
square.x = 100;<br/>
square.y = 150;<br/>
square.rotation = triangle.rotation;<br/>
square.scaleX = 1.5;<br/>
square.scaleY = 1.5;<br/>
square.currentFrame<br/>
square.alpha = 30;<br/>
square.height =20;<br/>
square.width =40;<br/>
square.visible =false;<br/>
</code></p>

<p>调用方法：变量名-点-属性名<br/>
方法<br/>
方法是指可以由对象执行的操作。</p>

<pre><code>shortFilm.play();  
shortFilm.stop();  
shortFilm.gotoAndStop(1);  
</code></pre>

<p>某些方法可以执行计算并返回可以像变量一样使用的结果。</p>

<pre><code>var numericData:Number = 9;  
var textData:String = numericData.toString();  
calculatorDisplay.text = numericData.toString();  
</code></pre>

<p>事件<br/>
本质上，事件就是所发生的、ActionScript 能够识别并可响应的事情。<br/>
在编写执行事件处理时三个重要元素：</p>

<pre><code>事件源：事件实际发生的位置。  
事件：发生的事情。  
响应：事件发生时的执行动作。  

this.stop();  
function playMovie(event:MouseEvent):void{  
this.play();}  

playButton.addEventListener(MouseEvent.CLICK, playMovie);  
</code></pre>

<p>算数运算符<br/>
+-*/^</p>

<h1>逻辑运算符  </h1>

<p>&amp;&amp;<br/>
||</p>

<p>if (dayOfWeek == "Wednesday"){<br/>
takeOutTrash();}</p>

<p>//单行注释<br/>
/<em>多行<br/>
注释<br/>
</em>/</p>

<p>流控制<br/>
函数<br/>
调用函数调用函数</p>

<pre><code>trace("Use trace to help debug your script");  
var randomNum:Number = Math.random();  

var someDate:Date = new Date();  
var dayNum:uint = someDate.getDay();  
</code></pre>

<p>定义函数</p>

<pre><code>function traceParameter(aParam:String){  
    trace(aParam);}  

traceParameter("hello"); // hello  
</code></pre>

<p>从函数返回值</p>

<pre><code>function doubleNum(baseNum:int):int{  
    return (baseNum * 2);}  
</code></pre>

<p><code/>
function passPrimitives(xParam:int, yParam:int):void{</p>

<pre><code>xParam++;  
yParam++;  
trace(xParam, yParam);  
</code></pre>

<p>}<br/>
</code><br/>
函数参数</p>

<pre><code>var xValue:int = 10;  
var yValue:int = 15;  
trace(xValue, yValue);// 10 15  
passPrimitives(xValue, yValue); // 11 16  
trace(xValue, yValue);// 10 15  
</code></pre>

<p>循环</p>

<p>for循环</p>

<pre><code>var i:int;  
for (i = 0; i &lt; 5; i++){  
trace(i);}  

for..in  

var myObj:Object = {x:20, y:30};  
for (var i:String in myObj){  
trace(i + ": " + myObj[i]);  
}  
//output:  
//x: 20  
// y: 30  
</code></pre>

<p>条件语句</p>

<pre><code>if (x &gt; 0){  
trace("x is positive");}  
else if (x &lt; 0){  
trace("x is negative");}  
else{  
trace("x is 0");}  
</code></pre>

<p>switch语句</p>

<p><code/>
switch(dayNum){<br/>
case 0:trace("Sunday");<br/>
break;<br/>
case 1:trace("Monday");<br/>
break;<br/>
case 2:trace("Tuesday");<br/>
break;<br/>
case 3:trace("Wednesday");<br/>
break;<br/>
case 4:trace("Thursday");<br/>
break;<br/>
case 5:trace("Friday");<br/>
break;<br/>
case 6:trace("Saturday");<br/>
break;<br/>
default:trace("Out of range");<br/>
break;<br/>
}<br/>
</code></p>

<p>类<br/>
点语法</p>

<p>点运算符 (.) 提供对对象的属性和方法的访问。使用点语法，可以使用后跟点运算符和属性名或方法名的实例名来引用类的属性或方法。以下面的类定义为例：</p>

<p><code/>
class DotExample<br/>
{<br/>
public var prop1:String;<br/>
public function method1():void {}<br/>
}<br/>
</code><br/>
借助于点语法，可以使用在如下代码中创建的实例名来访问 prop1 属性和 method1() 方法：<br/>
<code/><br/>
var myDotEx:DotExample = new DotExample();<br/>
myDotEx.prop1 = "hello";<br/>
myDotEx.method1();<br/>
</code><br/>
定义包时，可以使用点语法。可以使用点运算符来引用嵌套包。例如，EventDispatcher 类位于一个名为 events 的包中，该包嵌套在名为 flash 的包中。可以使用下面的表达式来引用 events 包：</p>

<p>flash.events</p>

<p>还可以使用此表达式来引用 EventDispatcher 类：</p>

<p>flash.events.EventDispatcher</p>

<p>数组</p>

<p><code/>
var names:Array = new Array("John", "Jane", "David");<br/>
trace(names.length); //output: 3<br/>
trace(names[0]);// output: John<br/>
trace(names[1]); //output: Jane<br/>
trace(names[2]);// output: David<br/>
</code></p>

<p>实例教程<br/>
对象的初始化<br/>
1 在主场景中新建一个矩形，全选然后F8转换为元件，命名为box。在第一帧里面尝试加入：<br/>
代码1</p>

<p><code/>
box.x = 10;<br/>
box.y = 150;<br/>
</code><br/>
代码2<br/>
<code/><br/>
box.rotation = triangle.rotation;<br/>
box.scaleX = 1.5;<br/>
box.scaleY = 1.5;<br/>
</code><br/>
2 把box变成一个骰子，尝试<br/>
代码3<br/>
<code/><br/>
box.currentFrame<br/>
box.alpha = 30;<br/>
box.height =20;<br/>
box.width =40;<br/>
box.visible =false;<br/>
</code><br/>
3 尝试使用随机函数<br/>
代码4<br/>
<code/><br/>
box.x = this.stage.width<em>Math.random();<br/>
box.y = this.stage.height</em>Math.random();<br/>
</code></p>

<p>影片剪辑的控制</p>

<p><code/>
box.stop();<br/>
box.play();<br/>
box.gotoAndStop(1);<br/>
box.gotoAndPlay(3);<br/>
box.gotoAndStop(Math.round(6*Math.random()));<br/>
</code></p>

<p>影片剪辑的控制</p>

<pre><code/>
import flash.display.*;
import flash.events.*;
mcFace.addEventListener(MouseEvent.MOUSE_DOWN,startDragFace);//添加监听

//startDragFace函数
function startDragFace(e:MouseEvent):void {
mcFace.startDrag();
}

mcFace.addEventListener(MouseEvent.MOUSE_UP,stopDragFace);

function stopDragFace(e:MouseEvent):void {
mcFace.stopDrag();

}
</code></pre>


<p></p>

<p>播放和定制按钮<br/>
1、制作按钮<br/>
2、给按钮命名为btn<br/>
3、在第一帧添加代码（该实例来自：AS3基础教程实例1 给按钮添加动作 | 且行电子学档: http://www.eportfolios.cn/node/2146）</p>

<pre><code>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器  
btn.addEventListener(MouseEvent.ROLL_OVER,btnRollOver);//注册鼠标放上事件帧听器  
btn.addEventListener(MouseEvent.ROLL_OUT,btnRollOut);//注册鼠标离开事件帧听器  
</code></pre>

<p>//点击事件处理函数</p>

<pre><code>function btnClick(e:MouseEvent):void{  
trace(e.currentTarget.name);//trace就是在输出面板里输出内容，这里输出"btn"，只有在flash测试的时候才有效  
}  
</code></pre>

<p>//鼠标放在btn上的事件处理函数</p>

<pre><code>function btnRollOver(e:MouseEvent):void{  
txt.text="鼠标放在了按钮上";//给文本框txt的text属性赋值为"鼠标放在了按钮上"  
}  
</code></pre>

<p>//鼠标从btn上离开的事件处理函数</p>

<pre><code>function btnRollOut(e:MouseEvent):void{  
txt.text="鼠标从按钮上离开了";  
}  
</code></pre>

<p>4、添加一个动态文本框，命名为txt<br/>
ctrl+enter测试影片<br/>
修改代码如下：</p>

<pre><code>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器  
</code></pre>

<p>//点击事件处理函数</p>

<pre><code>function btnClick(e:MouseEvent):void{  
box.gotoAndStop(Math.round(6*Math.random()));  
}  
</code></pre>

<p>测试影片，如果成功则再建一个按钮元件，命名为btnPlay,修改代码为：</p>

<pre><code>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器  
</code></pre>

<p>//点击事件处理函数</p>

<pre><code>function btnClick(e:MouseEvent):void{  
box.stop();  
}  
btnPlay.addEventListener(MouseEvent.CLICK,btnPlayClick);//给btnPlay注册事件帧听器  
</code></pre>

<p>//点击事件处理函数</p>

<pre><code>function btnPlayClick(e:MouseEvent):void{  
box.play();  
}  
</code></pre>

<p>如何使用文本框（Text）</p>

<p>使用前可以导入以下声明</p>

<pre><code>import flash.text.TextField;
import flash.text.TextFormat;
import flash.text.TextFormatAlign;
</code></pre>

<p>Number()将字符型转化为数值型变量<br/>
toString()将数值转化为字符</p>

<p>5、尝试仿照实例让代码与fla源文件分离：<br/>
实例：（AS3基础教程实例1 给按钮添加动作 | 且行电子学档: http://www.eportfolios.cn/node/2146）</p>

<p>本文参考了:<br/>
adobe AS3帮助手册：http://tinyurl.com/7ujc2yp</p>

<p>Flash实例<br/>
简单实例</p>

<pre><code>Flash教程：送给初学者的一点使用技巧_Flash实例教程_IT部落: http://edu.itbulo.com/200711/120855.htm  
立体板-Flash源文件-闪吧Flash8: http://www.flash8.net/fla/10364.shtml  
放大镜-Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10144.shtml  
卷轴和毛笔写字- Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10342.shtml  
地球旋转-上传：明月老师 Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10237.shtml  
瀑布-上传：CC851246330 Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/9515.shtml  
</code></pre>

<p>复杂实例<br/>
ActionScript 3.0的流程控制语法<em>知行网: http://www.zhixing123.cn/Flash/2111.html<br/>
flash actionScript3 处理xml 教程</em>知行网: http://www.zhixing123.cn/Flash/20080.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[尿从哪里来]]></title>
    <link href="http://zhangchunlei.com/blog/2014/10/05/where-does-urine-come-from/"/>
    <updated>2014-10-05T09:03:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2014/10/05/where-does-urine-come-from</id>
    <content type="html"><![CDATA[<p>小孩为什么会尿床、尿裤子？<br/>
小的时候，孩子经常会尿床，或者把裤子尿湿，其实任何人都会，但是随着年龄的增长，就不会了。大家知道为什么吗？原来尿液是储存在一个像袋子的器官中，大家知道是什么器官吗？这个器官叫膀胱。膀胱充满尿液后，就会发送信号到脊髓，脊髓收到信号后，如果没有大脑高级中枢的控制，就会自动舒展尿道括约肌，打开尿道、排除小便。由于小孩子的控制排尿的大脑高级中枢还没有发育完全，因此经常会无意识小便，等这个高级中枢发育好了，就可以更好的控制自己的排尿活动了。</p>

<p>尿的成分是什么？人为什么要尿尿呢？哪些因素会影响尿量的多少？<br/>
人体是有很多的细胞组成的，这些细胞在进行正常生命活动的时候，一方面需要养料，另外一方面还有排除废物。大家都知道细胞都会排除那些废物吗？这些废物又是如何排除的呢?这些废物包括：二氧化碳、水分、盐分、尿素等。其中很多的水分、多余的盐分和全部的尿素都是通过尿液排除体外的。天气、饮食、运动、疾病都会影响尿量的多少和成分。</p>

<p>那么尿液是怎么形成的呢？什么样的结构能够有效完成这个过程？</p>

<p>大家觉得膀胱里的尿液来自哪里？<br/>
学生表达自己关于尿液最终来源的看法。</p>

<p>什么样的结构能够有效完成这个过程？<br/>
利用动画探查相关的器官构造和尿液形成过程。肾脏的结构、肾单位、肾小管的重吸收作用。</p>

<object 
codebase="http://download.macromedia.com/pub/shockwave/
cabs/flash/swflash.cab#version=6,0,40,0" 
width="468" height="60" 
 id="mymoviename"> 
<param name="movie"  

value="http://www.biologymad.com/resources/kidney.swf" /> 
<param name="quality" value="high" /> 
<param name="bgcolor" value="#ffffff" /> 

<embed src="http://www.biologymad.com/resources/kidney.swf" quality="high" bgcolor="#ffffff"
width="468" height="60" 
name="mymoviename" align="" type="application/x-shockwave-flash" 
pluginspage="http://www.macromedia.com/go/getflashplayer"> 
</embed> 
</object>


<p>对物质的过滤是如何实现的？<br/>
深入的概念学习：不同大小的分子通过半透膜的规律。<br/>
<a href="http://lab.concord.org/embeddable.html#interactives/sam/diffusion/4-semipermeable.json">Lab Interactive: Diffusion Across a Semipermeable Membrane</a></p>

<p>当正常的器官组织收到了损害，会导致什么样的疾病？<br/>
糖尿是由于原尿中的糖分不能得到正常的重吸收。<br/>
蛋白尿是由于血液中蛋白质没有得到有效的过滤。<br/>
肾脏移植手术过程中为了让人体产生的废物得到排除，并且保留血液原有的营养物质，需要对病人的血液进行透析。按照你的猜测，透析的过程可能会是怎样的？</p>

<p>带领学生进行总结：<br/>
我们今天都学了什么？<br/>
这些知识让你对生活有了哪些新的理解？<br/>
你的学习方法和学习内容应该做哪些调整，才能更好的掌握这部分内容？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interactive simulation based inquiry activities]]></title>
    <link href="http://zhangchunlei.com/blog/2013/08/24/interaction-simulation-based-inquiry-activities/"/>
    <updated>2013-08-24T12:17:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2013/08/24/interaction-simulation-based-inquiry-activities</id>
    <content type="html"><![CDATA[<p>Sometimes it is hard to let students collect data to test their ideas about nature. For example to make observations how stars move for a long time, or do experiment about why plant grow to the sunlight. In this case, when oboservation and experiment difficult to carry out in classroom, computer software or interactive simulations can help a lot. There are two examples.</p>

<p>In a middle school biology class, students can play with the following flash game to figure out why plant grow to the sun.</p>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" 
codebase="http://download.macromedia.com/pub/shockwave/
cabs/flash/swflash.cab#version=6,0,40,0" 
width="468" height="60" 
 id="mymoviename"> 
<param name="movie"  

value="http://bioteahouse.wikispaces.com/file/view/Gmodel3.swf/446433960/Gmodel3.swf" /> 
<param name="quality" value="high" /> 
<param name="bgcolor" value="#ffffff" /> 

<embed src="http://bioteahouse.wikispaces.com/file/view/Gmodel3.swf/446433960/Gmodel3.swf" quality="high" bgcolor="#ffffff"
width="468" height="60" 
name="mymoviename" align="" type="application/x-shockwave-flash" 
pluginspage="http://www.macromedia.com/go/getflashplayer"> 
</embed> 
</object>




<!--more-->


<p>
In a elementary school science class, student can stuy how much water does a crow drink every day. They can also study their own diet using the same method.</p>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" 
codebase="http://download.macromedia.com/pub/shockwave/
cabs/flash/swflash.cab#version=6,0,40,0" 
width="468" height="60" 
 id="mymoviename"> 
<param name="movie"  

value="http://bioteahouse.wikispaces.com/file/view/crows+drink+water.swf/391202546/crows%20drink%20water.swf" /> 
<param name="quality" value="high" /> 
<param name="bgcolor" value="#ffffff" /> 

<embed src="http://bioteahouse.wikispaces.com/file/view/crows+drink+water.swf/391202546/crows%20drink%20water.swf" quality="high" bgcolor="#ffffff"
width="468" height="60" 
name="mymoviename" align="" type="application/x-shockwave-flash" 
pluginspage="http://www.macromedia.com/go/getflashplayer"> 
</embed> 
</object>


<p>Interactive simulations can help:<br/>
-   enage students, just give a cool show and some questions, then let them play with it.
-   stimulate students to ask questions
-   make observations and collect data or evidences<br/>
-   test their ideas</p>

<p>If teachers can guide and organize them to make explainations or argue with each other based on evidence, and make predictions and test them, at last provide opportunities for self-evaluation and community evaluations, then this approach would be more effective for learning science in classroom.</p>
]]></content>
  </entry>
  
</feed>

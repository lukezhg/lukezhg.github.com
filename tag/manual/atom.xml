<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tags: manual | Chunlei's Blog]]></title>
  <link href="http://zhangchunlei.com/tag/manual/atom.xml" rel="self"/>
  <link href="http://zhangchunlei.com/"/>
  <updated>2014-12-10T23:30:15+08:00</updated>
  <id>http://zhangchunlei.com/</id>
  <author>
    <name><![CDATA[chunlei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flash AS3 zip Manual]]></title>
    <link href="http://zhangchunlei.com/blog/2014/11/27/flash-as3-zip-manual/"/>
    <updated>2014-11-27T14:48:00+08:00</updated>
    <id>http://zhangchunlei.com/blog/2014/11/27/flash-as3-zip-manual</id>
    <content type="html"><![CDATA[<p>Action Script 3.0 简明手册<br/>
在上机前确保你的flash是cs3或者以上版本，如果是flash8或者以前的版本，下面有些代码会报错。<br/>
变量与常量<br/>
变量有不同的类型，一个变量由变量名和值构成。</p>

<p>var value2:Number = 17;<br/>
const SALES_TAX_RATE:Number = 0.07;</p>

<p>属性<br/>
简单地视为包含在对象中的“子”变量。</p>

<p>square.x = 100;<br/>
square.y = 150;<br/>
square.rotation = triangle.rotation;<br/>
square.scaleX = 1.5;<br/>
square.scaleY = 1.5;<br/>
square.currentFrame<br/>
square.alpha = 30;<br/>
square.height =20;<br/>
square.width =40;<br/>
square.visible =false;</p>

<p>调用方法：变量名-点-属性名<br/>
方法<br/>
方法是指可以由对象执行的操作。</p>

<p>shortFilm.play();<br/>
shortFilm.stop();<br/>
shortFilm.gotoAndStop(1);</p>

<p>某些方法可以执行计算并返回可以像变量一样使用的结果。</p>

<p>var numericData:Number = 9;<br/>
var textData:String = numericData.toString();<br/>
calculatorDisplay.text = numericData.toString();</p>

<p>事件<br/>
本质上，事件就是所发生的、ActionScript 能够识别并可响应的事情。<br/>
在编写执行事件处理时三个重要元素：</p>

<pre><code>事件源：事件实际发生的位置。  
事件：发生的事情。  
响应：事件发生时的执行动作。  
</code></pre>

<p>this.stop();<br/>
function playMovie(event:MouseEvent):void{<br/>
this.play();}</p>

<p>playButton.addEventListener(MouseEvent.CLICK, playMovie);</p>

<p>算数运算符<br/>
+-*/^</p>

<h1>逻辑运算符  </h1>

<p>&amp;&amp;<br/>
||</p>

<p>if (dayOfWeek == "Wednesday"){<br/>
takeOutTrash();}</p>

<p>//单行注释<br/>
/<em>多行<br/>
注释<br/>
</em>/</p>

<p>流控制<br/>
函数<br/>
调用函数调用函数</p>

<p>trace("Use trace to help debug your script");<br/>
var randomNum:Number = Math.random();</p>

<p>var someDate:Date = new Date();<br/>
var dayNum:uint = someDate.getDay();</p>

<p>定义函数</p>

<p>function traceParameter(aParam:String){</p>

<pre><code>trace(aParam);}  
</code></pre>

<p>traceParameter("hello"); // hello</p>

<p>从函数返回值</p>

<p>function doubleNum(baseNum:int):int{</p>

<pre><code>return (baseNum * 2);}  
</code></pre>

<p>function passPrimitives(xParam:int, yParam:int):void{</p>

<pre><code>xParam++;  
yParam++;  
trace(xParam, yParam);  
</code></pre>

<p>}</p>

<p>函数参数</p>

<p>var xValue:int = 10;<br/>
var yValue:int = 15;<br/>
trace(xValue, yValue);// 10 15<br/>
passPrimitives(xValue, yValue); // 11 16<br/>
trace(xValue, yValue);// 10 15</p>

<p>循环</p>

<p>for循环</p>

<p>var i:int;<br/>
for (i = 0; i &lt; 5; i++){<br/>
trace(i);}</p>

<p>for..in</p>

<p>var myObj:Object = {x:20, y:30};<br/>
for (var i:String in myObj){<br/>
trace(i + ": " + myObj[i]);<br/>
}<br/>
//output:<br/>
//x: 20<br/>
// y: 30</p>

<p>条件语句</p>

<p>if (x > 0){<br/>
trace("x is positive");}<br/>
else if (x &lt; 0){<br/>
trace("x is negative");}<br/>
else{<br/>
trace("x is 0");}</p>

<p>switch语句</p>

<p>switch(dayNum){<br/>
case 0:trace("Sunday");<br/>
break;<br/>
case 1:trace("Monday");<br/>
break;<br/>
case 2:trace("Tuesday");<br/>
break;<br/>
case 3:trace("Wednesday");<br/>
break;<br/>
case 4:trace("Thursday");<br/>
break;<br/>
case 5:trace("Friday");<br/>
break;<br/>
case 6:trace("Saturday");<br/>
break;<br/>
default:trace("Out of range");<br/>
break;<br/>
}</p>

<p>类<br/>
点语法</p>

<p>点运算符 (.) 提供对对象的属性和方法的访问。使用点语法，可以使用后跟点运算符和属性名或方法名的实例名来引用类的属性或方法。以下面的类定义为例：</p>

<p>class DotExample<br/>
{<br/>
public var prop1:String;<br/>
public function method1():void {}<br/>
}</p>

<p>借助于点语法，可以使用在如下代码中创建的实例名来访问 prop1 属性和 method1() 方法：</p>

<p>var myDotEx:DotExample = new DotExample();<br/>
myDotEx.prop1 = "hello";<br/>
myDotEx.method1();</p>

<p>定义包时，可以使用点语法。可以使用点运算符来引用嵌套包。例如，EventDispatcher 类位于一个名为 events 的包中，该包嵌套在名为 flash 的包中。可以使用下面的表达式来引用 events 包：</p>

<p>flash.events</p>

<p>还可以使用此表达式来引用 EventDispatcher 类：</p>

<p>flash.events.EventDispatcher</p>

<p>数组</p>

<p>var names:Array = new Array("John", "Jane", "David");<br/>
trace(names.length); //output: 3<br/>
trace(names[0]);// output: John<br/>
trace(names[1]); //output: Jane<br/>
trace(names[2]);// output: David</p>

<p>实例教程<br/>
对象的初始化<br/>
1 在主场景中新建一个矩形，全选然后F8转换为元件，命名为box。在第一帧里面尝试加入：<br/>
代码1</p>

<p>box.x = 10;<br/>
box.y = 150;</p>

<p>代码2</p>

<p>box.rotation = triangle.rotation;<br/>
box.scaleX = 1.5;<br/>
box.scaleY = 1.5;</p>

<p>2 把box变成一个骰子，尝试<br/>
代码3</p>

<p>box.currentFrame<br/>
box.alpha = 30;<br/>
box.height =20;<br/>
box.width =40;<br/>
box.visible =false;</p>

<p>3 尝试使用随机函数<br/>
代码4</p>

<p>box.x = this.stage.width<em>Math.random();<br/>
box.y = this.stage.height</em>Math.random();</p>

<p>影片剪辑的控制</p>

<p>box.stop();<br/>
box.play();<br/>
box.gotoAndStop(1);<br/>
box.gotoAndPlay(3);<br/>
box.gotoAndStop(Math.round(6*Math.random()));</p>

<p>播放和定制按钮<br/>
1、制作按钮<br/>
2、给按钮命名为btn<br/>
3、在第一帧添加代码（该实例来自：AS3基础教程实例1 给按钮添加动作 | 且行电子学档: http://www.eportfolios.cn/node/2146）</p>

<p>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器<br/>
btn.addEventListener(MouseEvent.ROLL_OVER,btnRollOver);//注册鼠标放上事件帧听器<br/>
btn.addEventListener(MouseEvent.ROLL_OUT,btnRollOut);//注册鼠标离开事件帧听器</p>

<p>//点击事件处理函数<br/>
function btnClick(e:MouseEvent):void{<br/>
trace(e.currentTarget.name);//trace就是在输出面板里输出内容，这里输出"btn"，只有在flash测试的时候才有效<br/>
}</p>

<p>//鼠标放在btn上的事件处理函数<br/>
function btnRollOver(e:MouseEvent):void{<br/>
txt.text="鼠标放在了按钮上";//给文本框txt的text属性赋值为"鼠标放在了按钮上"<br/>
}</p>

<p>//鼠标从btn上离开的事件处理函数<br/>
function btnRollOut(e:MouseEvent):void{<br/>
txt.text="鼠标从按钮上离开了";<br/>
}</p>

<p>4、添加一个动态文本框，命名为txt<br/>
ctrl+enter测试影片<br/>
修改代码如下：</p>

<p>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器</p>

<p>//点击事件处理函数<br/>
function btnClick(e:MouseEvent):void{<br/>
box.gotoAndStop(Math.round(6*Math.random()));<br/>
}</p>

<p>测试影片，如果成功则再建一个按钮元件，命名为btnPlay,修改代码为：</p>

<p>btn.addEventListener(MouseEvent.CLICK,btnClick);//给btn注册事件帧听器</p>

<p>//点击事件处理函数<br/>
function btnClick(e:MouseEvent):void{<br/>
box.stop();<br/>
}<br/>
btnPlay.addEventListener(MouseEvent.CLICK,btnPlayClick);//给btnPlay注册事件帧听器</p>

<p>//点击事件处理函数<br/>
function btnPlayClick(e:MouseEvent):void{<br/>
box.play();<br/>
}</p>

<p>5、尝试仿照实例让代码与fla源文件分离：<br/>
实例：（AS3基础教程实例1 给按钮添加动作 | 且行电子学档: http://www.eportfolios.cn/node/2146）</p>

<p>本文参考了:<br/>
adobe AS3帮助手册：http://tinyurl.com/7ujc2yp</p>

<p>Flash实例<br/>
简单实例</p>

<pre><code>Flash教程：送给初学者的一点使用技巧_Flash实例教程_IT部落: http://edu.itbulo.com/200711/120855.htm  
立体板-Flash源文件-闪吧Flash8: http://www.flash8.net/fla/10364.shtml  
放大镜-Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10144.shtml  
卷轴和毛笔写字- Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10342.shtml  
地球旋转-上传：明月老师 Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/10237.shtml  
瀑布-上传：CC851246330 Flash源文件 - 闪吧Flash8: http://www.flash8.net/fla/9515.shtml  
</code></pre>

<p>复杂实例<br/>
ActionScript 3.0的流程控制语法<em>知行网: http://www.zhixing123.cn/Flash/2111.html<br/>
flash actionScript3 处理xml 教程</em>知行网: http://www.zhixing123.cn/Flash/20080.html</p>
]]></content>
  </entry>
  
</feed>
